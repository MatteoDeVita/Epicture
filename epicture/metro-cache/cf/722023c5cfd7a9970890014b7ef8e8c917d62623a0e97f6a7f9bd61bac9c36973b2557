{"dependencies":[{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"fbjs/lib/performanceNow","data":{"isAsync":false}},{"name":"fbjs/lib/warning","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _defineProperty = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/defineProperty\");\n\n  var _createClass = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\");\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var performanceNow = _$$_REQUIRE(_dependencyMap[3], \"fbjs/lib/performanceNow\");\n\n  var warning = _$$_REQUIRE(_dependencyMap[4], \"fbjs/lib/warning\");\n\n  var Info = function Info() {\n    _classCallCheck(this, Info);\n\n    this.any_blank_count = 0;\n    this.any_blank_ms = 0;\n    this.any_blank_speed_sum = 0;\n    this.mostly_blank_count = 0;\n    this.mostly_blank_ms = 0;\n    this.pixels_blank = 0;\n    this.pixels_sampled = 0;\n    this.pixels_scrolled = 0;\n    this.total_time_spent = 0;\n    this.sample_count = 0;\n  };\n\n  var DEBUG = false;\n  var _listeners = [];\n  var _minSampleCount = 10;\n\n  var _sampleRate = DEBUG ? 1 : null;\n\n  var FillRateHelper = function () {\n    _createClass(FillRateHelper, null, [{\n      key: \"addListener\",\n      value: function addListener(callback) {\n        warning(_sampleRate !== null, 'Call `FillRateHelper.setSampleRate` before `addListener`.');\n\n        _listeners.push(callback);\n\n        return {\n          remove: function remove() {\n            _listeners = _listeners.filter(function (listener) {\n              return callback !== listener;\n            });\n          }\n        };\n      }\n    }, {\n      key: \"setSampleRate\",\n      value: function setSampleRate(sampleRate) {\n        _sampleRate = sampleRate;\n      }\n    }, {\n      key: \"setMinSampleCount\",\n      value: function setMinSampleCount(minSampleCount) {\n        _minSampleCount = minSampleCount;\n      }\n    }]);\n\n    function FillRateHelper(getFrameMetrics) {\n      _classCallCheck(this, FillRateHelper);\n\n      this._anyBlankStartTime = null;\n      this._enabled = false;\n      this._info = new Info();\n      this._mostlyBlankStartTime = null;\n      this._samplesStartTime = null;\n      this._getFrameMetrics = getFrameMetrics;\n      this._enabled = (_sampleRate || 0) > Math.random();\n\n      this._resetData();\n    }\n\n    _createClass(FillRateHelper, [{\n      key: \"activate\",\n      value: function activate() {\n        if (this._enabled && this._samplesStartTime == null) {\n          DEBUG && console.debug('FillRateHelper: activate');\n          this._samplesStartTime = performanceNow();\n        }\n      }\n    }, {\n      key: \"deactivateAndFlush\",\n      value: function deactivateAndFlush() {\n        if (!this._enabled) {\n          return;\n        }\n\n        var start = this._samplesStartTime;\n\n        if (start == null) {\n          DEBUG && console.debug('FillRateHelper: bail on deactivate with no start time');\n          return;\n        }\n\n        if (this._info.sample_count < _minSampleCount) {\n          this._resetData();\n\n          return;\n        }\n\n        var total_time_spent = performanceNow() - start;\n\n        var info = _objectSpread(_objectSpread({}, this._info), {}, {\n          total_time_spent: total_time_spent\n        });\n\n        if (DEBUG) {\n          var derived = {\n            avg_blankness: this._info.pixels_blank / this._info.pixels_sampled,\n            avg_speed: this._info.pixels_scrolled / (total_time_spent / 1000),\n            avg_speed_when_any_blank: this._info.any_blank_speed_sum / this._info.any_blank_count,\n            any_blank_per_min: this._info.any_blank_count / (total_time_spent / 1000 / 60),\n            any_blank_time_frac: this._info.any_blank_ms / total_time_spent,\n            mostly_blank_per_min: this._info.mostly_blank_count / (total_time_spent / 1000 / 60),\n            mostly_blank_time_frac: this._info.mostly_blank_ms / total_time_spent\n          };\n\n          for (var key in derived) {\n            derived[key] = Math.round(1000 * derived[key]) / 1000;\n          }\n\n          console.debug('FillRateHelper deactivateAndFlush: ', {\n            derived: derived,\n            info: info\n          });\n        }\n\n        _listeners.forEach(function (listener) {\n          return listener(info);\n        });\n\n        this._resetData();\n      }\n    }, {\n      key: \"computeBlankness\",\n      value: function computeBlankness(props, state, scrollMetrics) {\n        if (!this._enabled || props.getItemCount(props.data) === 0 || this._samplesStartTime == null) {\n          return 0;\n        }\n\n        var dOffset = scrollMetrics.dOffset,\n            offset = scrollMetrics.offset,\n            velocity = scrollMetrics.velocity,\n            visibleLength = scrollMetrics.visibleLength;\n        this._info.sample_count++;\n        this._info.pixels_sampled += Math.round(visibleLength);\n        this._info.pixels_scrolled += Math.round(Math.abs(dOffset));\n        var scrollSpeed = Math.round(Math.abs(velocity) * 1000);\n        var now = performanceNow();\n\n        if (this._anyBlankStartTime != null) {\n          this._info.any_blank_ms += now - this._anyBlankStartTime;\n        }\n\n        this._anyBlankStartTime = null;\n\n        if (this._mostlyBlankStartTime != null) {\n          this._info.mostly_blank_ms += now - this._mostlyBlankStartTime;\n        }\n\n        this._mostlyBlankStartTime = null;\n        var blankTop = 0;\n        var first = state.first;\n\n        var firstFrame = this._getFrameMetrics(first);\n\n        while (first <= state.last && (!firstFrame || !firstFrame.inLayout)) {\n          firstFrame = this._getFrameMetrics(first);\n          first++;\n        }\n\n        if (firstFrame && first > 0) {\n          blankTop = Math.min(visibleLength, Math.max(0, firstFrame.offset - offset));\n        }\n\n        var blankBottom = 0;\n        var last = state.last;\n\n        var lastFrame = this._getFrameMetrics(last);\n\n        while (last >= state.first && (!lastFrame || !lastFrame.inLayout)) {\n          lastFrame = this._getFrameMetrics(last);\n          last--;\n        }\n\n        if (lastFrame && last < props.getItemCount(props.data) - 1) {\n          var bottomEdge = lastFrame.offset + lastFrame.length;\n          blankBottom = Math.min(visibleLength, Math.max(0, offset + visibleLength - bottomEdge));\n        }\n\n        var pixels_blank = Math.round(blankTop + blankBottom);\n        var blankness = pixels_blank / visibleLength;\n\n        if (blankness > 0) {\n          this._anyBlankStartTime = now;\n          this._info.any_blank_speed_sum += scrollSpeed;\n          this._info.any_blank_count++;\n          this._info.pixels_blank += pixels_blank;\n\n          if (blankness > 0.5) {\n            this._mostlyBlankStartTime = now;\n            this._info.mostly_blank_count++;\n          }\n        } else if (scrollSpeed < 0.01 || Math.abs(dOffset) < 1) {\n          this.deactivateAndFlush();\n        }\n\n        return blankness;\n      }\n    }, {\n      key: \"enabled\",\n      value: function enabled() {\n        return this._enabled;\n      }\n    }, {\n      key: \"_resetData\",\n      value: function _resetData() {\n        this._anyBlankStartTime = null;\n        this._info = new Info();\n        this._mostlyBlankStartTime = null;\n        this._samplesStartTime = null;\n      }\n    }]);\n\n    return FillRateHelper;\n  }();\n\n  module.exports = FillRateHelper;\n});","lineCount":237,"map":[[2,0,11,0],[14,0,13,0],[14,6,13,6,"performanceNow"],[14,20,13,20],[14,23,13,23,"require"],[14,34,13,30],[14,80,13,0],[16,0,14,0],[16,6,14,6,"warning"],[16,13,14,13],[16,16,14,16,"require"],[16,27,14,23],[16,66,14,0],[18,6,18,6,"Info"],[18,10],[21,9,19,2,"any_blank_count"],[21,24],[21,27,19,28],[21,28],[22,9,20,2,"any_blank_ms"],[22,21],[22,24,20,25],[22,25],[23,9,21,2,"any_blank_speed_sum"],[23,28],[23,31,21,32],[23,32],[24,9,22,2,"mostly_blank_count"],[24,27],[24,30,22,31],[24,31],[25,9,23,2,"mostly_blank_ms"],[25,24],[25,27,23,28],[25,28],[26,9,24,2,"pixels_blank"],[26,21],[26,24,24,25],[26,25],[27,9,25,2,"pixels_sampled"],[27,23],[27,26,25,27],[27,27],[28,9,26,2,"pixels_scrolled"],[28,24],[28,27,26,28],[28,28],[29,9,27,2,"total_time_spent"],[29,25],[29,28,27,29],[29,29],[30,9,28,2,"sample_count"],[30,21],[30,24,28,25],[30,25],[33,0,38,0],[33,6,38,6,"DEBUG"],[33,11,38,11],[33,14,38,14],[33,19,38,0],[34,0,40,0],[34,6,40,4,"_listeners"],[34,16,40,37],[34,19,40,40],[34,21,40,0],[35,0,41,0],[35,6,41,4,"_minSampleCount"],[35,21,41,19],[35,24,41,22],[35,26,41,0],[37,0,42,0],[37,6,42,4,"_sampleRate"],[37,17,42,15],[37,20,42,18,"DEBUG"],[37,25,42,23],[37,28,42,26],[37,29,42,23],[37,32,42,30],[37,36,42,0],[39,6,52,6,"FillRateHelper"],[39,20],[42,34,61,4,"callback"],[42,42],[42,44,62,31],[43,0,63,4,"warning"],[43,8,63,4,"warning"],[43,15,63,11],[43,16,64,6,"_sampleRate"],[43,27,64,17],[43,32,64,22],[43,36,63,11],[43,38,65,6],[43,97,63,11],[43,98,63,4],[45,0,67,4,"_listeners"],[45,8,67,4,"_listeners"],[45,18,67,14],[45,19,67,15,"push"],[45,23,67,4],[45,24,67,20,"callback"],[45,32,67,4],[47,0,68,4],[47,15,68,11],[48,0,69,6,"remove"],[48,10,69,6,"remove"],[48,16,69,12],[48,18,69,14],[48,36,69,20],[49,0,70,8,"_listeners"],[49,12,70,8,"_listeners"],[49,22,70,18],[49,25,70,21,"_listeners"],[49,35,70,31],[49,36,70,32,"filter"],[49,42,70,21],[49,43,70,39],[49,53,70,39,"listener"],[49,61,70,47],[50,0,70,47],[50,21,70,51,"callback"],[50,29,70,59],[50,34,70,64,"listener"],[50,42,70,47],[51,0,70,47],[51,13,70,21],[51,14,70,8],[52,0,71,7],[53,0,68,11],[53,9,68,4],[54,0,73,3],[57,36,75,23,"sampleRate"],[57,46],[57,48,75,43],[58,0,76,4,"_sampleRate"],[58,8,76,4,"_sampleRate"],[58,19,76,15],[58,22,76,18,"sampleRate"],[58,32,76,4],[59,0,77,3],[62,40,79,27,"minSampleCount"],[62,54],[62,56,79,51],[63,0,80,4,"_minSampleCount"],[63,8,80,4,"_minSampleCount"],[63,23,80,19],[63,26,80,22,"minSampleCount"],[63,40,80,4],[64,0,81,3],[67,0,83,2],[67,28,83,14,"getFrameMetrics"],[67,43,83,2],[67,45,83,65],[68,0,83,65],[70,0,83,65],[70,11,53,2,"_anyBlankStartTime"],[70,29,83,65],[70,32,53,24],[70,36,83,65],[71,0,83,65],[71,11,54,2,"_enabled"],[71,19,83,65],[71,22,54,13],[71,27,83,65],[72,0,83,65],[72,11,56,2,"_info"],[72,16,83,65],[72,19,56,10],[72,23,56,14,"Info"],[72,27,56,10],[72,29,83,65],[73,0,83,65],[73,11,57,2,"_mostlyBlankStartTime"],[73,32,83,65],[73,35,57,27],[73,39,83,65],[74,0,83,65],[74,11,58,2,"_samplesStartTime"],[74,28,83,65],[74,31,58,23],[74,35,83,65],[75,0,84,4],[75,11,84,9,"_getFrameMetrics"],[75,27,84,4],[75,30,84,28,"getFrameMetrics"],[75,45,84,4],[76,0,85,4],[76,11,85,9,"_enabled"],[76,19,85,4],[76,22,85,20],[76,23,85,21,"_sampleRate"],[76,34,85,32],[76,38,85,36],[76,39,85,20],[76,43,85,41,"Math"],[76,47,85,45],[76,48,85,46,"random"],[76,54,85,41],[76,56,85,4],[78,0,86,4],[78,11,86,9,"_resetData"],[78,21,86,4],[79,0,87,3],[83,33,89,13],[84,0,90,4],[84,12,90,8],[84,17,90,13,"_enabled"],[84,25,90,8],[84,29,90,25],[84,34,90,30,"_samplesStartTime"],[84,51,90,25],[84,55,90,51],[84,59,90,4],[84,61,90,57],[85,0,91,6,"DEBUG"],[85,10,91,6,"DEBUG"],[85,15,91,11],[85,19,91,15,"console"],[85,26,91,22],[85,27,91,23,"debug"],[85,32,91,15],[85,33,91,29],[85,59,91,15],[85,60,91,6],[86,0,92,6],[86,15,92,11,"_samplesStartTime"],[86,32,92,6],[86,35,92,31,"performanceNow"],[86,49,92,45],[86,51,92,6],[87,0,93,5],[88,0,94,3],[91,43,96,23],[92,0,97,4],[92,12,97,8],[92,13,97,9],[92,18,97,14,"_enabled"],[92,26,97,4],[92,28,97,24],[93,0,98,6],[94,0,99,5],[96,0,100,4],[96,12,100,10,"start"],[96,17,100,15],[96,20,100,18],[96,25,100,23,"_samplesStartTime"],[96,42,100,4],[98,0,101,4],[98,12,101,8,"start"],[98,17,101,13],[98,21,101,17],[98,25,101,4],[98,27,101,23],[99,0,102,6,"DEBUG"],[99,10,102,6,"DEBUG"],[99,15,102,11],[99,19,103,8,"console"],[99,26,103,15],[99,27,103,16,"debug"],[99,32,103,8],[99,33,103,22],[99,88,103,8],[99,89,102,6],[100,0,104,6],[101,0,105,5],[103,0,106,4],[103,12,106,8],[103,17,106,13,"_info"],[103,22,106,8],[103,23,106,19,"sample_count"],[103,35,106,8],[103,38,106,34,"_minSampleCount"],[103,53,106,4],[103,55,106,51],[104,0,108,6],[104,15,108,11,"_resetData"],[104,25,108,6],[106,0,109,6],[107,0,110,5],[109,0,111,4],[109,12,111,10,"total_time_spent"],[109,28,111,26],[109,31,111,29,"performanceNow"],[109,45,111,43],[109,50,111,48,"start"],[109,55,111,4],[111,0,112,4],[111,12,112,10,"info"],[111,16,112,19],[111,51,113,9],[111,56,113,14,"_info"],[111,61,112,19],[112,0,114,6,"total_time_spent"],[112,10,114,6,"total_time_spent"],[112,26,114,22],[112,28,114,6,"total_time_spent"],[113,0,112,19],[113,10,112,4],[115,0,116,4],[115,12,116,8,"DEBUG"],[115,17,116,4],[115,19,116,15],[116,0,117,6],[116,14,117,12,"derived"],[116,21,117,19],[116,24,117,22],[117,0,118,8,"avg_blankness"],[117,12,118,8,"avg_blankness"],[117,25,118,21],[117,27,118,23],[117,32,118,28,"_info"],[117,37,118,23],[117,38,118,34,"pixels_blank"],[117,50,118,23],[117,53,118,49],[117,58,118,54,"_info"],[117,63,118,49],[117,64,118,60,"pixels_sampled"],[117,78,117,22],[118,0,119,8,"avg_speed"],[118,12,119,8,"avg_speed"],[118,21,119,17],[118,23,119,19],[118,28,119,24,"_info"],[118,33,119,19],[118,34,119,30,"pixels_scrolled"],[118,49,119,19],[118,53,119,49,"total_time_spent"],[118,69,119,65],[118,72,119,68],[118,76,119,19],[118,77,117,22],[119,0,120,8,"avg_speed_when_any_blank"],[119,12,120,8,"avg_speed_when_any_blank"],[119,36,120,32],[119,38,121,10],[119,43,121,15,"_info"],[119,48,121,10],[119,49,121,21,"any_blank_speed_sum"],[119,68,121,10],[119,71,121,43],[119,76,121,48,"_info"],[119,81,121,43],[119,82,121,54,"any_blank_count"],[119,97,117,22],[120,0,122,8,"any_blank_per_min"],[120,12,122,8,"any_blank_per_min"],[120,29,122,25],[120,31,123,10],[120,36,123,15,"_info"],[120,41,123,10],[120,42,123,21,"any_blank_count"],[120,57,123,10],[120,61,123,40,"total_time_spent"],[120,77,123,56],[120,80,123,59],[120,84,123,40],[120,87,123,66],[120,89,123,10],[120,90,117,22],[121,0,124,8,"any_blank_time_frac"],[121,12,124,8,"any_blank_time_frac"],[121,31,124,27],[121,33,124,29],[121,38,124,34,"_info"],[121,43,124,29],[121,44,124,40,"any_blank_ms"],[121,56,124,29],[121,59,124,55,"total_time_spent"],[121,75,117,22],[122,0,125,8,"mostly_blank_per_min"],[122,12,125,8,"mostly_blank_per_min"],[122,32,125,28],[122,34,126,10],[122,39,126,15,"_info"],[122,44,126,10],[122,45,126,21,"mostly_blank_count"],[122,63,126,10],[122,67,126,43,"total_time_spent"],[122,83,126,59],[122,86,126,62],[122,90,126,43],[122,93,126,69],[122,95,126,10],[122,96,117,22],[123,0,127,8,"mostly_blank_time_frac"],[123,12,127,8,"mostly_blank_time_frac"],[123,34,127,30],[123,36,127,32],[123,41,127,37,"_info"],[123,46,127,32],[123,47,127,43,"mostly_blank_ms"],[123,62,127,32],[123,65,127,61,"total_time_spent"],[124,0,117,22],[124,11,117,6],[126,0,129,6],[126,15,129,11],[126,19,129,17,"key"],[126,22,129,6],[126,26,129,24,"derived"],[126,33,129,6],[126,35,129,33],[127,0,130,8,"derived"],[127,12,130,8,"derived"],[127,19,130,15],[127,20,130,16,"key"],[127,23,130,15],[127,24,130,8],[127,27,130,23,"Math"],[127,31,130,27],[127,32,130,28,"round"],[127,37,130,23],[127,38,130,34],[127,45,130,41,"derived"],[127,52,130,48],[127,53,130,49,"key"],[127,56,130,48],[127,57,130,23],[127,61,130,57],[127,65,130,8],[128,0,131,7],[130,0,132,6,"console"],[130,10,132,6,"console"],[130,17,132,13],[130,18,132,14,"debug"],[130,23,132,6],[130,24,132,20],[130,61,132,6],[130,63,132,59],[131,0,132,60,"derived"],[131,12,132,60,"derived"],[131,19,132,67],[131,21,132,60,"derived"],[131,28,132,59],[132,0,132,69,"info"],[132,12,132,69,"info"],[132,16,132,73],[132,18,132,69,"info"],[133,0,132,59],[133,11,132,6],[134,0,133,5],[136,0,134,4,"_listeners"],[136,8,134,4,"_listeners"],[136,18,134,14],[136,19,134,15,"forEach"],[136,26,134,4],[136,27,134,23],[136,37,134,23,"listener"],[136,45,134,31],[137,0,134,31],[137,17,134,35,"listener"],[137,25,134,43],[137,26,134,44,"info"],[137,30,134,43],[137,31,134,31],[138,0,134,31],[138,9,134,4],[140,0,135,4],[140,13,135,9,"_resetData"],[140,23,135,4],[141,0,136,3],[144,39,139,4,"props"],[144,44],[144,46,145,4,"state"],[144,51],[144,53,150,4,"scrollMetrics"],[144,66],[144,68,157,12],[145,0,158,4],[145,12,159,6],[145,13,159,7],[145,18,159,12,"_enabled"],[145,26,159,6],[145,30,160,6,"props"],[145,35,160,11],[145,36,160,12,"getItemCount"],[145,48,160,6],[145,49,160,25,"props"],[145,54,160,30],[145,55,160,31,"data"],[145,59,160,6],[145,65,160,41],[145,66,159,6],[145,70,161,6],[145,75,161,11,"_samplesStartTime"],[145,92,161,6],[145,96,161,32],[145,100,158,4],[145,102,162,6],[146,0,163,6],[146,17,163,13],[146,18,163,6],[147,0,164,5],[149,0,157,12],[149,12,165,11,"dOffset"],[149,19,157,12],[149,22,165,55,"scrollMetrics"],[149,35,157,12],[149,36,165,11,"dOffset"],[149,43,157,12],[150,0,157,12],[150,12,165,20,"offset"],[150,18,157,12],[150,21,165,55,"scrollMetrics"],[150,34,157,12],[150,35,165,20,"offset"],[150,41,157,12],[151,0,157,12],[151,12,165,28,"velocity"],[151,20,157,12],[151,23,165,55,"scrollMetrics"],[151,36,157,12],[151,37,165,28,"velocity"],[151,45,157,12],[152,0,157,12],[152,12,165,38,"visibleLength"],[152,25,157,12],[152,28,165,55,"scrollMetrics"],[152,41,157,12],[152,42,165,38,"visibleLength"],[152,55,157,12],[153,0,169,4],[153,13,169,9,"_info"],[153,18,169,4],[153,19,169,15,"sample_count"],[153,31,169,4],[154,0,170,4],[154,13,170,9,"_info"],[154,18,170,4],[154,19,170,15,"pixels_sampled"],[154,33,170,4],[154,37,170,33,"Math"],[154,41,170,37],[154,42,170,38,"round"],[154,47,170,33],[154,48,170,44,"visibleLength"],[154,61,170,33],[154,62,170,4],[155,0,171,4],[155,13,171,9,"_info"],[155,18,171,4],[155,19,171,15,"pixels_scrolled"],[155,34,171,4],[155,38,171,34,"Math"],[155,42,171,38],[155,43,171,39,"round"],[155,48,171,34],[155,49,171,45,"Math"],[155,53,171,49],[155,54,171,50,"abs"],[155,57,171,45],[155,58,171,54,"dOffset"],[155,65,171,45],[155,66,171,34],[155,67,171,4],[156,0,172,4],[156,12,172,10,"scrollSpeed"],[156,23,172,21],[156,26,172,24,"Math"],[156,30,172,28],[156,31,172,29,"round"],[156,36,172,24],[156,37,172,35,"Math"],[156,41,172,39],[156,42,172,40,"abs"],[156,45,172,35],[156,46,172,44,"velocity"],[156,54,172,35],[156,58,172,56],[156,62,172,24],[156,63,172,4],[157,0,175,4],[157,12,175,10,"now"],[157,15,175,13],[157,18,175,16,"performanceNow"],[157,32,175,30],[157,34,175,4],[159,0,176,4],[159,12,176,8],[159,17,176,13,"_anyBlankStartTime"],[159,35,176,8],[159,39,176,35],[159,43,176,4],[159,45,176,41],[160,0,177,6],[160,15,177,11,"_info"],[160,20,177,6],[160,21,177,17,"any_blank_ms"],[160,33,177,6],[160,37,177,33,"now"],[160,40,177,36],[160,43,177,39],[160,48,177,44,"_anyBlankStartTime"],[160,66,177,6],[161,0,178,5],[163,0,179,4],[163,13,179,9,"_anyBlankStartTime"],[163,31,179,4],[163,34,179,30],[163,38,179,4],[165,0,180,4],[165,12,180,8],[165,17,180,13,"_mostlyBlankStartTime"],[165,38,180,8],[165,42,180,38],[165,46,180,4],[165,48,180,44],[166,0,181,6],[166,15,181,11,"_info"],[166,20,181,6],[166,21,181,17,"mostly_blank_ms"],[166,36,181,6],[166,40,181,36,"now"],[166,43,181,39],[166,46,181,42],[166,51,181,47,"_mostlyBlankStartTime"],[166,72,181,6],[167,0,182,5],[169,0,183,4],[169,13,183,9,"_mostlyBlankStartTime"],[169,34,183,4],[169,37,183,33],[169,41,183,4],[170,0,185,4],[170,12,185,8,"blankTop"],[170,20,185,16],[170,23,185,19],[170,24,185,4],[171,0,186,4],[171,12,186,8,"first"],[171,17,186,13],[171,20,186,16,"state"],[171,25,186,21],[171,26,186,22,"first"],[171,31,186,4],[173,0,187,4],[173,12,187,8,"firstFrame"],[173,22,187,18],[173,25,187,21],[173,30,187,26,"_getFrameMetrics"],[173,46,187,21],[173,47,187,43,"first"],[173,52,187,21],[173,53,187,4],[175,0,188,4],[175,15,188,11,"first"],[175,20,188,16],[175,24,188,20,"state"],[175,29,188,25],[175,30,188,26,"last"],[175,34,188,11],[175,39,188,35],[175,40,188,36,"firstFrame"],[175,50,188,35],[175,54,188,50],[175,55,188,51,"firstFrame"],[175,65,188,61],[175,66,188,62,"inLayout"],[175,74,188,11],[175,75,188,4],[175,77,188,73],[176,0,189,6,"firstFrame"],[176,10,189,6,"firstFrame"],[176,20,189,16],[176,23,189,19],[176,28,189,24,"_getFrameMetrics"],[176,44,189,19],[176,45,189,41,"first"],[176,50,189,19],[176,51,189,6],[177,0,190,6,"first"],[177,10,190,6,"first"],[177,15,190,11],[178,0,191,5],[180,0,194,4],[180,12,194,8,"firstFrame"],[180,22,194,18],[180,26,194,22,"first"],[180,31,194,27],[180,34,194,30],[180,35,194,4],[180,37,194,33],[181,0,195,6,"blankTop"],[181,10,195,6,"blankTop"],[181,18,195,14],[181,21,195,17,"Math"],[181,25,195,21],[181,26,195,22,"min"],[181,29,195,17],[181,30,196,8,"visibleLength"],[181,43,195,17],[181,45,197,8,"Math"],[181,49,197,12],[181,50,197,13,"max"],[181,53,197,8],[181,54,197,17],[181,55,197,8],[181,57,197,20,"firstFrame"],[181,67,197,30],[181,68,197,31,"offset"],[181,74,197,20],[181,77,197,40,"offset"],[181,83,197,8],[181,84,195,17],[181,85,195,6],[182,0,199,5],[184,0,200,4],[184,12,200,8,"blankBottom"],[184,23,200,19],[184,26,200,22],[184,27,200,4],[185,0,201,4],[185,12,201,8,"last"],[185,16,201,12],[185,19,201,15,"state"],[185,24,201,20],[185,25,201,21,"last"],[185,29,201,4],[187,0,202,4],[187,12,202,8,"lastFrame"],[187,21,202,17],[187,24,202,20],[187,29,202,25,"_getFrameMetrics"],[187,45,202,20],[187,46,202,42,"last"],[187,50,202,20],[187,51,202,4],[189,0,203,4],[189,15,203,11,"last"],[189,19,203,15],[189,23,203,19,"state"],[189,28,203,24],[189,29,203,25,"first"],[189,34,203,11],[189,39,203,35],[189,40,203,36,"lastFrame"],[189,49,203,35],[189,53,203,49],[189,54,203,50,"lastFrame"],[189,63,203,59],[189,64,203,60,"inLayout"],[189,72,203,11],[189,73,203,4],[189,75,203,71],[190,0,204,6,"lastFrame"],[190,10,204,6,"lastFrame"],[190,19,204,15],[190,22,204,18],[190,27,204,23,"_getFrameMetrics"],[190,43,204,18],[190,44,204,40,"last"],[190,48,204,18],[190,49,204,6],[191,0,205,6,"last"],[191,10,205,6,"last"],[191,14,205,10],[192,0,206,5],[194,0,209,4],[194,12,209,8,"lastFrame"],[194,21,209,17],[194,25,209,21,"last"],[194,29,209,25],[194,32,209,28,"props"],[194,37,209,33],[194,38,209,34,"getItemCount"],[194,50,209,28],[194,51,209,47,"props"],[194,56,209,52],[194,57,209,53,"data"],[194,61,209,28],[194,65,209,61],[194,66,209,4],[194,68,209,64],[195,0,210,6],[195,14,210,12,"bottomEdge"],[195,24,210,22],[195,27,210,25,"lastFrame"],[195,36,210,34],[195,37,210,35,"offset"],[195,43,210,25],[195,46,210,44,"lastFrame"],[195,55,210,53],[195,56,210,54,"length"],[195,62,210,6],[196,0,211,6,"blankBottom"],[196,10,211,6,"blankBottom"],[196,21,211,17],[196,24,211,20,"Math"],[196,28,211,24],[196,29,211,25,"min"],[196,32,211,20],[196,33,212,8,"visibleLength"],[196,46,211,20],[196,48,213,8,"Math"],[196,52,213,12],[196,53,213,13,"max"],[196,56,213,8],[196,57,213,17],[196,58,213,8],[196,60,213,20,"offset"],[196,66,213,26],[196,69,213,29,"visibleLength"],[196,82,213,20],[196,85,213,45,"bottomEdge"],[196,95,213,8],[196,96,211,20],[196,97,211,6],[197,0,215,5],[199,0,216,4],[199,12,216,10,"pixels_blank"],[199,24,216,22],[199,27,216,25,"Math"],[199,31,216,29],[199,32,216,30,"round"],[199,37,216,25],[199,38,216,36,"blankTop"],[199,46,216,44],[199,49,216,47,"blankBottom"],[199,60,216,25],[199,61,216,4],[200,0,217,4],[200,12,217,10,"blankness"],[200,21,217,19],[200,24,217,22,"pixels_blank"],[200,36,217,34],[200,39,217,37,"visibleLength"],[200,52,217,4],[202,0,218,4],[202,12,218,8,"blankness"],[202,21,218,17],[202,24,218,20],[202,25,218,4],[202,27,218,23],[203,0,219,6],[203,15,219,11,"_anyBlankStartTime"],[203,33,219,6],[203,36,219,32,"now"],[203,39,219,6],[204,0,220,6],[204,15,220,11,"_info"],[204,20,220,6],[204,21,220,17,"any_blank_speed_sum"],[204,40,220,6],[204,44,220,40,"scrollSpeed"],[204,55,220,6],[205,0,221,6],[205,15,221,11,"_info"],[205,20,221,6],[205,21,221,17,"any_blank_count"],[205,36,221,6],[206,0,222,6],[206,15,222,11,"_info"],[206,20,222,6],[206,21,222,17,"pixels_blank"],[206,33,222,6],[206,37,222,33,"pixels_blank"],[206,49,222,6],[208,0,223,6],[208,14,223,10,"blankness"],[208,23,223,19],[208,26,223,22],[208,29,223,6],[208,31,223,27],[209,0,224,8],[209,17,224,13,"_mostlyBlankStartTime"],[209,38,224,8],[209,41,224,37,"now"],[209,44,224,8],[210,0,225,8],[210,17,225,13,"_info"],[210,22,225,8],[210,23,225,19,"mostly_blank_count"],[210,41,225,8],[211,0,226,7],[212,0,227,5],[212,9,218,4],[212,15,227,11],[212,19,227,15,"scrollSpeed"],[212,30,227,26],[212,33,227,29],[212,37,227,15],[212,41,227,37,"Math"],[212,45,227,41],[212,46,227,42,"abs"],[212,49,227,37],[212,50,227,46,"dOffset"],[212,57,227,37],[212,61,227,57],[212,62,227,11],[212,64,227,60],[213,0,228,6],[213,15,228,11,"deactivateAndFlush"],[213,33,228,6],[214,0,229,5],[216,0,230,4],[216,15,230,11,"blankness"],[216,24,230,4],[217,0,231,3],[220,32,233,21],[221,0,234,4],[221,15,234,11],[221,20,234,16,"_enabled"],[221,28,234,4],[222,0,235,3],[225,35,237,15],[226,0,238,4],[226,13,238,9,"_anyBlankStartTime"],[226,31,238,4],[226,34,238,30],[226,38,238,4],[227,0,239,4],[227,13,239,9,"_info"],[227,18,239,4],[227,21,239,17],[227,25,239,21,"Info"],[227,29,239,17],[227,31,239,4],[228,0,240,4],[228,13,240,9,"_mostlyBlankStartTime"],[228,34,240,4],[228,37,240,33],[228,41,240,4],[229,0,241,4],[229,13,241,9,"_samplesStartTime"],[229,30,241,4],[229,33,241,29],[229,37,241,4],[230,0,242,3],[236,0,245,0,"module"],[236,2,245,0,"module"],[236,8,245,6],[236,9,245,7,"exports"],[236,16,245,0],[236,19,245,17,"FillRateHelper"],[236,33,245,0]],"functionMap":{"names":["<global>","Info","FillRateHelper","addListener","remove","_listeners.filter$argument_0","setSampleRate","setMinSampleCount","constructor","activate","deactivateAndFlush","_listeners.forEach$argument_0","computeBlankness","enabled","_resetData"],"mappings":"AAA;ACiB;CDW;AEuB;ECQ;cCS;uCCC,iCD;ODC;GDE;EIE;GJE;EKE;GLE;EME;GNI;EOE;GPK;EQE;uBCsC,0BD;GRE;EUE;GV6F;EWE;GXE;EYE;GZK;CFC"}},"type":"js/module"}]}