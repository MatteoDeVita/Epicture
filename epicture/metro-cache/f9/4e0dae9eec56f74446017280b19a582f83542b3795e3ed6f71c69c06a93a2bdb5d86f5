{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"./NativeWebSocketModule","data":{"isAsync":false}},{"name":"../Blob/Blob","data":{"isAsync":false}},{"name":"../Blob/BlobManager","data":{"isAsync":false}},{"name":"event-target-shim","data":{"isAsync":false}},{"name":"../EventEmitter/NativeEventEmitter","data":{"isAsync":false}},{"name":"./WebSocketEvent","data":{"isAsync":false}},{"name":"base64-js","data":{"isAsync":false}},{"name":"../Utilities/binaryToBase64","data":{"isAsync":false}},{"name":"invariant","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/objectWithoutProperties\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/inherits\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _NativeWebSocketModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"./NativeWebSocketModule\"));\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n  var Blob = _$$_REQUIRE(_dependencyMap[8], \"../Blob/Blob\");\n\n  var BlobManager = _$$_REQUIRE(_dependencyMap[9], \"../Blob/BlobManager\");\n\n  var EventTarget = _$$_REQUIRE(_dependencyMap[10], \"event-target-shim\");\n\n  var NativeEventEmitter = _$$_REQUIRE(_dependencyMap[11], \"../EventEmitter/NativeEventEmitter\");\n\n  var WebSocketEvent = _$$_REQUIRE(_dependencyMap[12], \"./WebSocketEvent\");\n\n  var base64 = _$$_REQUIRE(_dependencyMap[13], \"base64-js\");\n\n  var binaryToBase64 = _$$_REQUIRE(_dependencyMap[14], \"../Utilities/binaryToBase64\");\n\n  var invariant = _$$_REQUIRE(_dependencyMap[15], \"invariant\");\n\n  var CONNECTING = 0;\n  var OPEN = 1;\n  var CLOSING = 2;\n  var CLOSED = 3;\n  var CLOSE_NORMAL = 1000;\n  var WEBSOCKET_EVENTS = ['close', 'error', 'message', 'open'];\n  var nextWebSocketId = 0;\n\n  var WebSocket = function (_ref) {\n    (0, _inherits2.default)(WebSocket, _ref);\n\n    var _super = _createSuper(WebSocket);\n\n    function WebSocket(url, protocols, options) {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, WebSocket);\n      _this = _super.call(this);\n      _this.CONNECTING = CONNECTING;\n      _this.OPEN = OPEN;\n      _this.CLOSING = CLOSING;\n      _this.CLOSED = CLOSED;\n      _this.readyState = CONNECTING;\n\n      if (typeof protocols === 'string') {\n        protocols = [protocols];\n      }\n\n      var _ref2 = options || {},\n          _ref2$headers = _ref2.headers,\n          headers = _ref2$headers === void 0 ? {} : _ref2$headers,\n          unrecognized = (0, _objectWithoutProperties2.default)(_ref2, [\"headers\"]);\n\n      if (unrecognized && typeof unrecognized.origin === 'string') {\n        console.warn('Specifying `origin` as a WebSocket connection option is deprecated. Include it under `headers` instead.');\n        headers.origin = unrecognized.origin;\n        delete unrecognized.origin;\n      }\n\n      if (Object.keys(unrecognized).length > 0) {\n        console.warn('Unrecognized WebSocket connection option(s) `' + Object.keys(unrecognized).join('`, `') + '`. ' + 'Did you mean to put these under `headers`?');\n      }\n\n      if (!Array.isArray(protocols)) {\n        protocols = null;\n      }\n\n      _this._eventEmitter = new NativeEventEmitter(_NativeWebSocketModule.default);\n      _this._socketId = nextWebSocketId++;\n\n      _this._registerEvents();\n\n      _NativeWebSocketModule.default.connect(url, protocols, {\n        headers: headers\n      }, _this._socketId);\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(WebSocket, [{\n      key: \"close\",\n      value: function close(code, reason) {\n        if (this.readyState === this.CLOSING || this.readyState === this.CLOSED) {\n          return;\n        }\n\n        this.readyState = this.CLOSING;\n\n        this._close(code, reason);\n      }\n    }, {\n      key: \"send\",\n      value: function send(data) {\n        if (this.readyState === this.CONNECTING) {\n          throw new Error('INVALID_STATE_ERR');\n        }\n\n        if (data instanceof Blob) {\n          invariant(BlobManager.isAvailable, 'Native module BlobModule is required for blob support');\n          BlobManager.sendOverSocket(data, this._socketId);\n          return;\n        }\n\n        if (typeof data === 'string') {\n          _NativeWebSocketModule.default.send(data, this._socketId);\n\n          return;\n        }\n\n        if (data instanceof ArrayBuffer || ArrayBuffer.isView(data)) {\n          _NativeWebSocketModule.default.sendBinary(binaryToBase64(data), this._socketId);\n\n          return;\n        }\n\n        throw new Error('Unsupported data type');\n      }\n    }, {\n      key: \"ping\",\n      value: function ping() {\n        if (this.readyState === this.CONNECTING) {\n          throw new Error('INVALID_STATE_ERR');\n        }\n\n        _NativeWebSocketModule.default.ping(this._socketId);\n      }\n    }, {\n      key: \"_close\",\n      value: function _close(code, reason) {\n        var statusCode = typeof code === 'number' ? code : CLOSE_NORMAL;\n        var closeReason = typeof reason === 'string' ? reason : '';\n\n        _NativeWebSocketModule.default.close(statusCode, closeReason, this._socketId);\n\n        if (BlobManager.isAvailable && this._binaryType === 'blob') {\n          BlobManager.removeWebSocketHandler(this._socketId);\n        }\n      }\n    }, {\n      key: \"_unregisterEvents\",\n      value: function _unregisterEvents() {\n        this._subscriptions.forEach(function (e) {\n          return e.remove();\n        });\n\n        this._subscriptions = [];\n      }\n    }, {\n      key: \"_registerEvents\",\n      value: function _registerEvents() {\n        var _this2 = this;\n\n        this._subscriptions = [this._eventEmitter.addListener('websocketMessage', function (ev) {\n          if (ev.id !== _this2._socketId) {\n            return;\n          }\n\n          var data = ev.data;\n\n          switch (ev.type) {\n            case 'binary':\n              data = base64.toByteArray(ev.data).buffer;\n              break;\n\n            case 'blob':\n              data = BlobManager.createFromOptions(ev.data);\n              break;\n          }\n\n          _this2.dispatchEvent(new WebSocketEvent('message', {\n            data: data\n          }));\n        }), this._eventEmitter.addListener('websocketOpen', function (ev) {\n          if (ev.id !== _this2._socketId) {\n            return;\n          }\n\n          _this2.readyState = _this2.OPEN;\n          _this2.protocol = ev.protocol;\n\n          _this2.dispatchEvent(new WebSocketEvent('open'));\n        }), this._eventEmitter.addListener('websocketClosed', function (ev) {\n          if (ev.id !== _this2._socketId) {\n            return;\n          }\n\n          _this2.readyState = _this2.CLOSED;\n\n          _this2.dispatchEvent(new WebSocketEvent('close', {\n            code: ev.code,\n            reason: ev.reason\n          }));\n\n          _this2._unregisterEvents();\n\n          _this2.close();\n        }), this._eventEmitter.addListener('websocketFailed', function (ev) {\n          if (ev.id !== _this2._socketId) {\n            return;\n          }\n\n          _this2.readyState = _this2.CLOSED;\n\n          _this2.dispatchEvent(new WebSocketEvent('error', {\n            message: ev.message\n          }));\n\n          _this2.dispatchEvent(new WebSocketEvent('close', {\n            message: ev.message\n          }));\n\n          _this2._unregisterEvents();\n\n          _this2.close();\n        })];\n      }\n    }, {\n      key: \"binaryType\",\n      get: function get() {\n        return this._binaryType;\n      },\n      set: function set(binaryType) {\n        if (binaryType !== 'blob' && binaryType !== 'arraybuffer') {\n          throw new Error(\"binaryType must be either 'blob' or 'arraybuffer'\");\n        }\n\n        if (this._binaryType === 'blob' || binaryType === 'blob') {\n          invariant(BlobManager.isAvailable, 'Native module BlobModule is required for blob support');\n\n          if (binaryType === 'blob') {\n            BlobManager.addWebSocketHandler(this._socketId);\n          } else {\n            BlobManager.removeWebSocketHandler(this._socketId);\n          }\n        }\n\n        this._binaryType = binaryType;\n      }\n    }]);\n    return WebSocket;\n  }(EventTarget.apply(void 0, WEBSOCKET_EVENTS));\n\n  WebSocket.CONNECTING = CONNECTING;\n  WebSocket.OPEN = OPEN;\n  WebSocket.CLOSING = CLOSING;\n  WebSocket.CLOSED = CLOSED;\n  module.exports = WebSocket;\n});","lineCount":267,"map":[[2,0,11,0],[18,0,24,0],[24,0,13,0],[24,6,13,6,"Blob"],[24,10,13,10],[24,13,13,13,"require"],[24,24,13,20],[24,59,13,0],[26,0,14,0],[26,6,14,6,"BlobManager"],[26,17,14,17],[26,20,14,20,"require"],[26,31,14,27],[26,73,14,0],[28,0,15,0],[28,6,15,6,"EventTarget"],[28,17,15,17],[28,20,15,20,"require"],[28,31,15,27],[28,72,15,0],[30,0,16,0],[30,6,16,6,"NativeEventEmitter"],[30,24,16,24],[30,27,16,27,"require"],[30,38,16,34],[30,96,16,0],[32,0,17,0],[32,6,17,6,"WebSocketEvent"],[32,20,17,20],[32,23,17,23,"require"],[32,34,17,30],[32,74,17,0],[34,0,19,0],[34,6,19,6,"base64"],[34,12,19,12],[34,15,19,15,"require"],[34,26,19,22],[34,59,19,0],[36,0,20,0],[36,6,20,6,"binaryToBase64"],[36,20,20,20],[36,23,20,23,"require"],[36,34,20,30],[36,85,20,0],[38,0,21,0],[38,6,21,6,"invariant"],[38,15,21,15],[38,18,21,18,"require"],[38,29,21,25],[38,62,21,0],[40,0,40,0],[40,6,40,6,"CONNECTING"],[40,16,40,16],[40,19,40,19],[40,20,40,0],[41,0,41,0],[41,6,41,6,"OPEN"],[41,10,41,10],[41,13,41,13],[41,14,41,0],[42,0,42,0],[42,6,42,6,"CLOSING"],[42,13,42,13],[42,16,42,16],[42,17,42,0],[43,0,43,0],[43,6,43,6,"CLOSED"],[43,12,43,12],[43,15,43,15],[43,16,43,0],[44,0,45,0],[44,6,45,6,"CLOSE_NORMAL"],[44,18,45,18],[44,21,45,21],[44,25,45,0],[45,0,47,0],[45,6,47,6,"WEBSOCKET_EVENTS"],[45,22,47,22],[45,25,47,25],[45,26,47,26],[45,33,47,25],[45,35,47,35],[45,42,47,25],[45,44,47,44],[45,53,47,25],[45,55,47,55],[45,61,47,25],[45,62,47,0],[46,0,49,0],[46,6,49,4,"nextWebSocketId"],[46,21,49,19],[46,24,49,22],[46,25,49,0],[48,6,57,6,"WebSocket"],[48,15],[53,0,84,2],[53,23,85,4,"url"],[53,26,84,2],[53,28,86,4,"protocols"],[53,37,84,2],[53,39,87,4,"options"],[53,46,84,2],[53,48,88,4],[54,0,88,4],[56,0,88,4],[57,0,89,4],[58,0,88,4],[58,12,63,2,"CONNECTING"],[58,22,88,4],[58,25,63,23,"CONNECTING"],[58,35,88,4],[59,0,88,4],[59,12,64,2,"OPEN"],[59,16,88,4],[59,19,64,17,"OPEN"],[59,23,88,4],[60,0,88,4],[60,12,65,2,"CLOSING"],[60,19,88,4],[60,22,65,20,"CLOSING"],[60,29,88,4],[61,0,88,4],[61,12,66,2,"CLOSED"],[61,18,88,4],[61,21,66,19,"CLOSED"],[61,27,88,4],[62,0,88,4],[62,12,81,2,"readyState"],[62,22,88,4],[62,25,81,23,"CONNECTING"],[62,35,88,4],[64,0,90,4],[64,10,90,8],[64,17,90,15,"protocols"],[64,26,90,8],[64,31,90,29],[64,39,90,4],[64,41,90,39],[65,0,91,6,"protocols"],[65,8,91,6,"protocols"],[65,17,91,15],[65,20,91,18],[65,21,91,19,"protocols"],[65,30,91,18],[65,31,91,6],[66,0,92,5],[68,0,88,4],[68,18,94,44,"options"],[68,25,94,51],[68,29,94,55],[68,31,88,4],[69,0,88,4],[69,32,94,11,"headers"],[69,39,88,4],[70,0,88,4],[70,10,94,11,"headers"],[70,17,88,4],[70,47,94,21],[70,49,88,4],[71,0,88,4],[71,10,94,28,"unrecognized"],[71,22,88,4],[73,0,100,4],[73,10,100,8,"unrecognized"],[73,22,100,20],[73,26,100,24],[73,33,100,31,"unrecognized"],[73,45,100,43],[73,46,100,44,"origin"],[73,52,100,24],[73,57,100,55],[73,65,100,4],[73,67,100,65],[74,0,101,6,"console"],[74,8,101,6,"console"],[74,15,101,13],[74,16,101,14,"warn"],[74,20,101,6],[74,21,102,8],[74,126,101,6],[75,0,107,6,"headers"],[75,8,107,6,"headers"],[75,15,107,13],[75,16,107,14,"origin"],[75,22,107,6],[75,25,107,23,"unrecognized"],[75,37,107,35],[75,38,107,36,"origin"],[75,44,107,6],[76,0,111,6],[76,15,111,13,"unrecognized"],[76,27,111,25],[76,28,111,26,"origin"],[76,34,111,6],[77,0,112,5],[79,0,115,4],[79,10,115,8,"Object"],[79,16,115,14],[79,17,115,15,"keys"],[79,21,115,8],[79,22,115,20,"unrecognized"],[79,34,115,8],[79,36,115,34,"length"],[79,42,115,8],[79,45,115,43],[79,46,115,4],[79,48,115,46],[80,0,116,6,"console"],[80,8,116,6,"console"],[80,15,116,13],[80,16,116,14,"warn"],[80,20,116,6],[80,21,117,8],[80,71,118,10,"Object"],[80,77,118,16],[80,78,118,17,"keys"],[80,82,118,10],[80,83,118,22,"unrecognized"],[80,95,118,10],[80,97,118,36,"join"],[80,101,118,10],[80,102,118,41],[80,108,118,10],[80,109,117,8],[80,112,119,10],[80,117,117,8],[80,120,120,10],[80,164,116,6],[81,0,122,5],[83,0,124,4],[83,10,124,8],[83,11,124,9,"Array"],[83,16,124,14],[83,17,124,15,"isArray"],[83,24,124,9],[83,25,124,23,"protocols"],[83,34,124,9],[83,35,124,4],[83,37,124,35],[84,0,125,6,"protocols"],[84,8,125,6,"protocols"],[84,17,125,15],[84,20,125,18],[84,24,125,6],[85,0,126,5],[87,0,128,4],[87,12,128,9,"_eventEmitter"],[87,25,128,4],[87,28,128,25],[87,32,128,29,"NativeEventEmitter"],[87,50,128,25],[87,51,128,48,"NativeWebSocketModule"],[87,81,128,25],[87,82,128,4],[88,0,129,4],[88,12,129,9,"_socketId"],[88,21,129,4],[88,24,129,21,"nextWebSocketId"],[88,39,129,36],[88,41,129,4],[90,0,130,4],[90,12,130,9,"_registerEvents"],[90,27,130,4],[92,0,131,4,"NativeWebSocketModule"],[92,37,131,26,"connect"],[92,44,131,4],[92,45,131,34,"url"],[92,48,131,4],[92,50,131,39,"protocols"],[92,59,131,4],[92,61,131,50],[93,0,131,51,"headers"],[93,8,131,51,"headers"],[93,15,131,58],[93,17,131,51,"headers"],[94,0,131,50],[94,7,131,4],[94,9,131,61],[94,15,131,66,"_socketId"],[94,24,131,4],[96,0,88,4],[97,0,132,3],[101,28,156,8,"code"],[101,32],[101,34,156,23,"reason"],[101,40],[101,42,156,46],[102,0,157,4],[102,12,157,8],[102,17,157,13,"readyState"],[102,27,157,8],[102,32,157,28],[102,37,157,33,"CLOSING"],[102,44,157,8],[102,48,157,44],[102,53,157,49,"readyState"],[102,63,157,44],[102,68,157,64],[102,73,157,69,"CLOSED"],[102,79,157,4],[102,81,157,77],[103,0,158,6],[104,0,159,5],[106,0,161,4],[106,13,161,9,"readyState"],[106,23,161,4],[106,26,161,22],[106,31,161,27,"CLOSING"],[106,38,161,4],[108,0,162,4],[108,13,162,9,"_close"],[108,19,162,4],[108,20,162,16,"code"],[108,24,162,4],[108,26,162,22,"reason"],[108,32,162,4],[109,0,163,3],[112,27,165,7,"data"],[112,31],[112,33,165,66],[113,0,166,4],[113,12,166,8],[113,17,166,13,"readyState"],[113,27,166,8],[113,32,166,28],[113,37,166,33,"CONNECTING"],[113,47,166,4],[113,49,166,45],[114,0,167,6],[114,16,167,12],[114,20,167,16,"Error"],[114,25,167,12],[114,26,167,22],[114,45,167,12],[114,46,167,6],[115,0,168,5],[117,0,170,4],[117,12,170,8,"data"],[117,16,170,12],[117,28,170,24,"Blob"],[117,32,170,4],[117,34,170,30],[118,0,171,6,"invariant"],[118,10,171,6,"invariant"],[118,19,171,15],[118,20,172,8,"BlobManager"],[118,31,172,19],[118,32,172,20,"isAvailable"],[118,43,171,15],[118,45,173,8],[118,100,171,15],[118,101,171,6],[119,0,175,6,"BlobManager"],[119,10,175,6,"BlobManager"],[119,21,175,17],[119,22,175,18,"sendOverSocket"],[119,36,175,6],[119,37,175,33,"data"],[119,41,175,6],[119,43,175,39],[119,48,175,44,"_socketId"],[119,57,175,6],[120,0,176,6],[121,0,177,5],[123,0,179,4],[123,12,179,8],[123,19,179,15,"data"],[123,23,179,8],[123,28,179,24],[123,36,179,4],[123,38,179,34],[124,0,180,6,"NativeWebSocketModule"],[124,41,180,28,"send"],[124,45,180,6],[124,46,180,33,"data"],[124,50,180,6],[124,52,180,39],[124,57,180,44,"_socketId"],[124,66,180,6],[126,0,181,6],[127,0,182,5],[129,0,184,4],[129,12,184,8,"data"],[129,16,184,12],[129,28,184,24,"ArrayBuffer"],[129,39,184,8],[129,43,184,39,"ArrayBuffer"],[129,54,184,50],[129,55,184,51,"isView"],[129,61,184,39],[129,62,184,58,"data"],[129,66,184,39],[129,67,184,4],[129,69,184,65],[130,0,185,6,"NativeWebSocketModule"],[130,41,185,28,"sendBinary"],[130,51,185,6],[130,52,185,39,"binaryToBase64"],[130,66,185,53],[130,67,185,54,"data"],[130,71,185,53],[130,72,185,6],[130,74,185,61],[130,79,185,66,"_socketId"],[130,88,185,6],[132,0,186,6],[133,0,187,5],[135,0,189,4],[135,14,189,10],[135,18,189,14,"Error"],[135,23,189,10],[135,24,189,20],[135,47,189,10],[135,48,189,4],[136,0,190,3],[139,29,192,15],[140,0,193,4],[140,12,193,8],[140,17,193,13,"readyState"],[140,27,193,8],[140,32,193,28],[140,37,193,33,"CONNECTING"],[140,47,193,4],[140,49,193,45],[141,0,194,6],[141,16,194,12],[141,20,194,16,"Error"],[141,25,194,12],[141,26,194,22],[141,45,194,12],[141,46,194,6],[142,0,195,5],[144,0,197,4,"NativeWebSocketModule"],[144,39,197,26,"ping"],[144,43,197,4],[144,44,197,31],[144,49,197,36,"_socketId"],[144,58,197,4],[145,0,198,3],[148,29,200,9,"code"],[148,33],[148,35,200,24,"reason"],[148,41],[148,43,200,47],[149,0,202,4],[149,12,202,10,"statusCode"],[149,22,202,20],[149,25,202,23],[149,32,202,30,"code"],[149,36,202,23],[149,41,202,39],[149,49,202,23],[149,52,202,50,"code"],[149,56,202,23],[149,59,202,57,"CLOSE_NORMAL"],[149,71,202,4],[150,0,203,4],[150,12,203,10,"closeReason"],[150,23,203,21],[150,26,203,24],[150,33,203,31,"reason"],[150,39,203,24],[150,44,203,42],[150,52,203,24],[150,55,203,53,"reason"],[150,61,203,24],[150,64,203,62],[150,66,203,4],[152,0,204,4,"NativeWebSocketModule"],[152,39,204,26,"close"],[152,44,204,4],[152,45,204,32,"statusCode"],[152,55,204,4],[152,57,204,44,"closeReason"],[152,68,204,4],[152,70,204,57],[152,75,204,62,"_socketId"],[152,84,204,4],[154,0,206,4],[154,12,206,8,"BlobManager"],[154,23,206,19],[154,24,206,20,"isAvailable"],[154,35,206,8],[154,39,206,35],[154,44,206,40,"_binaryType"],[154,55,206,35],[154,60,206,56],[154,66,206,4],[154,68,206,64],[155,0,207,6,"BlobManager"],[155,10,207,6,"BlobManager"],[155,21,207,17],[155,22,207,18,"removeWebSocketHandler"],[155,44,207,6],[155,45,207,41],[155,50,207,46,"_socketId"],[155,59,207,6],[156,0,208,5],[157,0,209,3],[160,42,211,28],[161,0,212,4],[161,13,212,9,"_subscriptions"],[161,27,212,4],[161,28,212,24,"forEach"],[161,35,212,4],[161,36,212,32],[161,46,212,32,"e"],[161,47,212,33],[162,0,212,33],[162,17,212,37,"e"],[162,18,212,38],[162,19,212,39,"remove"],[162,25,212,37],[162,27,212,33],[163,0,212,33],[163,9,212,4],[165,0,213,4],[165,13,213,9,"_subscriptions"],[165,27,213,4],[165,30,213,26],[165,32,213,4],[166,0,214,3],[169,40,216,26],[170,0,216,26],[172,0,217,4],[172,13,217,9,"_subscriptions"],[172,27,217,4],[172,30,217,26],[172,31,218,6],[172,36,218,11,"_eventEmitter"],[172,49,218,6],[172,50,218,25,"addListener"],[172,61,218,6],[172,62,218,37],[172,80,218,6],[172,82,218,57],[172,92,218,57,"ev"],[172,94,218,59],[172,96,218,63],[173,0,219,8],[173,14,219,12,"ev"],[173,16,219,14],[173,17,219,15,"id"],[173,19,219,12],[173,24,219,22],[173,30,219,26],[173,31,219,27,"_socketId"],[173,40,219,8],[173,42,219,38],[174,0,220,10],[175,0,221,9],[177,0,222,8],[177,14,222,12,"data"],[177,18,222,16],[177,21,222,19,"ev"],[177,23,222,21],[177,24,222,22,"data"],[177,28,222,8],[179,0,223,8],[179,18,223,16,"ev"],[179,20,223,18],[179,21,223,19,"type"],[179,25,223,8],[180,0,224,10],[180,17,224,15],[180,25,224,10],[181,0,225,12,"data"],[181,14,225,12,"data"],[181,18,225,16],[181,21,225,19,"base64"],[181,27,225,25],[181,28,225,26,"toByteArray"],[181,39,225,19],[181,40,225,38,"ev"],[181,42,225,40],[181,43,225,41,"data"],[181,47,225,19],[181,49,225,47,"buffer"],[181,55,225,12],[182,0,226,12],[184,0,227,10],[184,17,227,15],[184,23,227,10],[185,0,228,12,"data"],[185,14,228,12,"data"],[185,18,228,16],[185,21,228,19,"BlobManager"],[185,32,228,30],[185,33,228,31,"createFromOptions"],[185,50,228,19],[185,51,228,49,"ev"],[185,53,228,51],[185,54,228,52,"data"],[185,58,228,19],[185,59,228,12],[186,0,229,12],[187,0,223,8],[189,0,231,8],[189,10,231,8],[189,16,231,12],[189,17,231,13,"dispatchEvent"],[189,30,231,8],[189,31,231,27],[189,35,231,31,"WebSocketEvent"],[189,49,231,27],[189,50,231,46],[189,59,231,27],[189,61,231,57],[190,0,231,58,"data"],[190,12,231,58,"data"],[190,16,231,62],[190,18,231,58,"data"],[191,0,231,57],[191,11,231,27],[191,12,231,8],[192,0,232,7],[192,9,218,6],[192,10,217,26],[192,12,233,6],[192,17,233,11,"_eventEmitter"],[192,30,233,6],[192,31,233,25,"addListener"],[192,42,233,6],[192,43,233,37],[192,58,233,6],[192,60,233,54],[192,70,233,54,"ev"],[192,72,233,56],[192,74,233,60],[193,0,234,8],[193,14,234,12,"ev"],[193,16,234,14],[193,17,234,15,"id"],[193,19,234,12],[193,24,234,22],[193,30,234,26],[193,31,234,27,"_socketId"],[193,40,234,8],[193,42,234,38],[194,0,235,10],[195,0,236,9],[197,0,237,8],[197,10,237,8],[197,16,237,12],[197,17,237,13,"readyState"],[197,27,237,8],[197,30,237,26],[197,36,237,30],[197,37,237,31,"OPEN"],[197,41,237,8],[198,0,238,8],[198,10,238,8],[198,16,238,12],[198,17,238,13,"protocol"],[198,25,238,8],[198,28,238,24,"ev"],[198,30,238,26],[198,31,238,27,"protocol"],[198,39,238,8],[200,0,239,8],[200,10,239,8],[200,16,239,12],[200,17,239,13,"dispatchEvent"],[200,30,239,8],[200,31,239,27],[200,35,239,31,"WebSocketEvent"],[200,49,239,27],[200,50,239,46],[200,56,239,27],[200,57,239,8],[201,0,240,7],[201,9,233,6],[201,10,217,26],[201,12,241,6],[201,17,241,11,"_eventEmitter"],[201,30,241,6],[201,31,241,25,"addListener"],[201,42,241,6],[201,43,241,37],[201,60,241,6],[201,62,241,56],[201,72,241,56,"ev"],[201,74,241,58],[201,76,241,62],[202,0,242,8],[202,14,242,12,"ev"],[202,16,242,14],[202,17,242,15,"id"],[202,19,242,12],[202,24,242,22],[202,30,242,26],[202,31,242,27,"_socketId"],[202,40,242,8],[202,42,242,38],[203,0,243,10],[204,0,244,9],[206,0,245,8],[206,10,245,8],[206,16,245,12],[206,17,245,13,"readyState"],[206,27,245,8],[206,30,245,26],[206,36,245,30],[206,37,245,31,"CLOSED"],[206,43,245,8],[208,0,246,8],[208,10,246,8],[208,16,246,12],[208,17,246,13,"dispatchEvent"],[208,30,246,8],[208,31,247,10],[208,35,247,14,"WebSocketEvent"],[208,49,247,10],[208,50,247,29],[208,57,247,10],[208,59,247,38],[209,0,248,12,"code"],[209,12,248,12,"code"],[209,16,248,16],[209,18,248,18,"ev"],[209,20,248,20],[209,21,248,21,"code"],[209,25,247,38],[210,0,249,12,"reason"],[210,12,249,12,"reason"],[210,18,249,18],[210,20,249,20,"ev"],[210,22,249,22],[210,23,249,23,"reason"],[211,0,247,38],[211,11,247,10],[211,12,246,8],[213,0,252,8],[213,10,252,8],[213,16,252,12],[213,17,252,13,"_unregisterEvents"],[213,34,252,8],[215,0,253,8],[215,10,253,8],[215,16,253,12],[215,17,253,13,"close"],[215,22,253,8],[216,0,254,7],[216,9,241,6],[216,10,217,26],[216,12,255,6],[216,17,255,11,"_eventEmitter"],[216,30,255,6],[216,31,255,25,"addListener"],[216,42,255,6],[216,43,255,37],[216,60,255,6],[216,62,255,56],[216,72,255,56,"ev"],[216,74,255,58],[216,76,255,62],[217,0,256,8],[217,14,256,12,"ev"],[217,16,256,14],[217,17,256,15,"id"],[217,19,256,12],[217,24,256,22],[217,30,256,26],[217,31,256,27,"_socketId"],[217,40,256,8],[217,42,256,38],[218,0,257,10],[219,0,258,9],[221,0,259,8],[221,10,259,8],[221,16,259,12],[221,17,259,13,"readyState"],[221,27,259,8],[221,30,259,26],[221,36,259,30],[221,37,259,31,"CLOSED"],[221,43,259,8],[223,0,260,8],[223,10,260,8],[223,16,260,12],[223,17,260,13,"dispatchEvent"],[223,30,260,8],[223,31,261,10],[223,35,261,14,"WebSocketEvent"],[223,49,261,10],[223,50,261,29],[223,57,261,10],[223,59,261,38],[224,0,262,12,"message"],[224,12,262,12,"message"],[224,19,262,19],[224,21,262,21,"ev"],[224,23,262,23],[224,24,262,24,"message"],[225,0,261,38],[225,11,261,10],[225,12,260,8],[227,0,265,8],[227,10,265,8],[227,16,265,12],[227,17,265,13,"dispatchEvent"],[227,30,265,8],[227,31,266,10],[227,35,266,14,"WebSocketEvent"],[227,49,266,10],[227,50,266,29],[227,57,266,10],[227,59,266,38],[228,0,267,12,"message"],[228,12,267,12,"message"],[228,19,267,19],[228,21,267,21,"ev"],[228,23,267,23],[228,24,267,24,"message"],[229,0,266,38],[229,11,266,10],[229,12,265,8],[231,0,270,8],[231,10,270,8],[231,16,270,12],[231,17,270,13,"_unregisterEvents"],[231,34,270,8],[233,0,271,8],[233,10,271,8],[233,16,271,12],[233,17,271,13,"close"],[233,22,271,8],[234,0,272,7],[234,9,255,6],[234,10,217,26],[234,11,217,4],[235,0,274,3],[238,26,134,32],[239,0,135,4],[239,15,135,11],[239,20,135,16,"_binaryType"],[239,31,135,4],[240,0,136,3],[240,7],[241,24,138,17,"binaryType"],[241,34],[241,36,138,47],[242,0,139,4],[242,12,139,8,"binaryType"],[242,22,139,18],[242,27,139,23],[242,33,139,8],[242,37,139,33,"binaryType"],[242,47,139,43],[242,52,139,48],[242,65,139,4],[242,67,139,63],[243,0,140,6],[243,16,140,12],[243,20,140,16,"Error"],[243,25,140,12],[243,26,140,22],[243,77,140,12],[243,78,140,6],[244,0,141,5],[246,0,142,4],[246,12,142,8],[246,17,142,13,"_binaryType"],[246,28,142,8],[246,33,142,29],[246,39,142,8],[246,43,142,39,"binaryType"],[246,53,142,49],[246,58,142,54],[246,64,142,4],[246,66,142,62],[247,0,143,6,"invariant"],[247,10,143,6,"invariant"],[247,19,143,15],[247,20,144,8,"BlobManager"],[247,31,144,19],[247,32,144,20,"isAvailable"],[247,43,143,15],[247,45,145,8],[247,100,143,15],[247,101,143,6],[249,0,147,6],[249,14,147,10,"binaryType"],[249,24,147,20],[249,29,147,25],[249,35,147,6],[249,37,147,33],[250,0,148,8,"BlobManager"],[250,12,148,8,"BlobManager"],[250,23,148,19],[250,24,148,20,"addWebSocketHandler"],[250,43,148,8],[250,44,148,40],[250,49,148,45,"_socketId"],[250,58,148,8],[251,0,149,7],[251,11,147,6],[251,17,149,13],[252,0,150,8,"BlobManager"],[252,12,150,8,"BlobManager"],[252,23,150,19],[252,24,150,20,"removeWebSocketHandler"],[252,46,150,8],[252,47,150,43],[252,52,150,48,"_socketId"],[252,61,150,8],[253,0,151,7],[254,0,152,5],[256,0,153,4],[256,13,153,9,"_binaryType"],[256,24,153,4],[256,27,153,23,"binaryType"],[256,37,153,4],[257,0,154,3],[260,4,57,25,"EventTarget"],[260,15,57,36],[260,21,57,25],[260,30,57,40,"WEBSOCKET_EVENTS"],[260,46,57,25],[260,47],[262,0,57,6,"WebSocket"],[262,2,57,6,"WebSocket"],[262,11],[262,12,58,9,"CONNECTING"],[262,22],[262,25,58,30,"CONNECTING"],[262,35],[263,0,57,6,"WebSocket"],[263,2,57,6,"WebSocket"],[263,11],[263,12,59,9,"OPEN"],[263,16],[263,19,59,24,"OPEN"],[263,23],[264,0,57,6,"WebSocket"],[264,2,57,6,"WebSocket"],[264,11],[264,12,60,9,"CLOSING"],[264,19],[264,22,60,27,"CLOSING"],[264,29],[265,0,57,6,"WebSocket"],[265,2,57,6,"WebSocket"],[265,11],[265,12,61,9,"CLOSED"],[265,18],[265,21,61,26,"CLOSED"],[265,27],[266,0,277,0,"module"],[266,2,277,0,"module"],[266,8,277,6],[266,9,277,7,"exports"],[266,16,277,0],[266,19,277,17,"WebSocket"],[266,28,277,0]],"functionMap":{"names":["<global>","WebSocket","constructor","get__binaryType","set__binaryType","close","send","ping","_close","_unregisterEvents","_subscriptions.forEach$argument_0","_registerEvents","_eventEmitter.addListener$argument_1"],"mappings":"AAA;ACwD;EC2B;GDgD;EEE;GFE;EGE;GHgB;EIE;GJO;EKE;GLyB;EME;GNM;EOE;GPS;EQE;gCCC,eD;GRE;EUE;yDCE;ODc;sDCC;ODO;wDCC;ODa;wDCC;ODiB;GVE;CDC"}},"type":"js/module"}]}