{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./LogBoxLog","data":{"isAsync":false}},{"name":"./parseLogBoxLog","data":{"isAsync":false}},{"name":"../../Core/Devtools/parseErrorStack","data":{"isAsync":false}},{"name":"../../NativeModules/specs/NativeLogBox","data":{"isAsync":false}},{"name":"../../Core/ExceptionsManager","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.reportLogBoxError = reportLogBoxError;\n  exports.isLogBoxErrorMessage = isLogBoxErrorMessage;\n  exports.isMessageIgnored = isMessageIgnored;\n  exports.addLog = addLog;\n  exports.addException = addException;\n  exports.symbolicateLogNow = symbolicateLogNow;\n  exports.retrySymbolicateLogNow = retrySymbolicateLogNow;\n  exports.symbolicateLogLazy = symbolicateLogLazy;\n  exports.clear = clear;\n  exports.setSelectedLog = setSelectedLog;\n  exports.clearWarnings = clearWarnings;\n  exports.clearErrors = clearErrors;\n  exports.dismiss = dismiss;\n  exports.setWarningFilter = setWarningFilter;\n  exports.setAppInfo = setAppInfo;\n  exports.getAppInfo = getAppInfo;\n  exports.checkWarningFilter = checkWarningFilter;\n  exports.addIgnorePatterns = addIgnorePatterns;\n  exports.setDisabled = setDisabled;\n  exports.isDisabled = isDisabled;\n  exports.observe = observe;\n  exports.withSubscription = withSubscription;\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/inherits\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7], \"react\"));\n\n  var _LogBoxLog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"./LogBoxLog\"));\n\n  var _parseLogBoxLog = _$$_REQUIRE(_dependencyMap[9], \"./parseLogBoxLog\");\n\n  var _parseErrorStack = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"../../Core/Devtools/parseErrorStack\"));\n\n  var _NativeLogBox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"../../NativeModules/specs/NativeLogBox\"));\n\n  var _jsxFileName = \"/home/lorris/WORK/B-DEV-501-LYN-5-1-epicture-matteo.de-vita/epicture/node_modules/react-native/Libraries/LogBox/Data/LogBoxData.js\";\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  'use strict';\n\n  var observers = new Set();\n  var ignorePatterns = new Set();\n  var appInfo = null;\n  var logs = new Set();\n  var updateTimeout = null;\n  var _isDisabled = false;\n\n  var _selectedIndex = -1;\n\n  var warningFilter = function warningFilter(format) {\n    return {\n      finalFormat: format,\n      forceDialogImmediately: false,\n      suppressDialog_LEGACY: true,\n      suppressCompletely: false,\n      monitorEvent: 'unknown',\n      monitorListVersion: 0,\n      monitorSampleRate: 1\n    };\n  };\n\n  var LOGBOX_ERROR_MESSAGE = 'An error was thrown when attempting to render log messages via LogBox.';\n\n  function getNextState() {\n    return {\n      logs: logs,\n      isDisabled: _isDisabled,\n      selectedLogIndex: _selectedIndex\n    };\n  }\n\n  function reportLogBoxError(error, componentStack) {\n    var ExceptionsManager = _$$_REQUIRE(_dependencyMap[12], \"../../Core/ExceptionsManager\");\n\n    error.forceRedbox = true;\n    error.message = LOGBOX_ERROR_MESSAGE + \"\\n\\n\" + error.message;\n\n    if (componentStack != null) {\n      error.componentStack = componentStack;\n    }\n\n    ExceptionsManager.handleException(error, true);\n  }\n\n  function isLogBoxErrorMessage(message) {\n    return typeof message === 'string' && message.includes(LOGBOX_ERROR_MESSAGE);\n  }\n\n  function isMessageIgnored(message) {\n    for (var _iterator = _createForOfIteratorHelperLoose(ignorePatterns), _step; !(_step = _iterator()).done;) {\n      var pattern = _step.value;\n\n      if (pattern instanceof RegExp && pattern.test(message) || typeof pattern === 'string' && message.includes(pattern)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function handleUpdate() {\n    if (updateTimeout == null) {\n      updateTimeout = setImmediate(function () {\n        updateTimeout = null;\n        var nextState = getNextState();\n        observers.forEach(function (_ref) {\n          var observer = _ref.observer;\n          return observer(nextState);\n        });\n      });\n    }\n  }\n\n  function appendNewLog(newLog) {\n    if (isMessageIgnored(newLog.message.content)) {\n      return;\n    }\n\n    var lastLog = Array.from(logs).pop();\n\n    if (lastLog && lastLog.category === newLog.category) {\n      lastLog.incrementCount();\n      handleUpdate();\n      return;\n    }\n\n    if (newLog.level === 'fatal') {\n      var OPTIMISTIC_WAIT_TIME = 1000;\n\n      var _addPendingLog = function addPendingLog() {\n        logs.add(newLog);\n\n        if (_selectedIndex <= 0) {\n          setSelectedLog(logs.size - 1);\n        } else {\n          handleUpdate();\n        }\n\n        _addPendingLog = null;\n      };\n\n      var optimisticTimeout = setTimeout(function () {\n        if (_addPendingLog) {\n          _addPendingLog();\n        }\n      }, OPTIMISTIC_WAIT_TIME);\n      newLog.symbolicate(function (status) {\n        if (_addPendingLog && status !== 'PENDING') {\n          _addPendingLog();\n\n          clearTimeout(optimisticTimeout);\n        } else if (status !== 'PENDING') {\n          handleUpdate();\n        }\n      });\n    } else if (newLog.level === 'syntax') {\n      logs.add(newLog);\n      setSelectedLog(logs.size - 1);\n    } else {\n      logs.add(newLog);\n      handleUpdate();\n    }\n  }\n\n  function addLog(log) {\n    var errorForStackTrace = new Error();\n    setImmediate(function () {\n      try {\n        var stack = (0, _parseErrorStack.default)(errorForStackTrace);\n        appendNewLog(new _LogBoxLog.default({\n          level: log.level,\n          message: log.message,\n          isComponentError: false,\n          stack: stack,\n          category: log.category,\n          componentStack: log.componentStack\n        }));\n      } catch (error) {\n        reportLogBoxError(error);\n      }\n    });\n  }\n\n  function addException(error) {\n    setImmediate(function () {\n      try {\n        appendNewLog(new _LogBoxLog.default((0, _parseLogBoxLog.parseLogBoxException)(error)));\n      } catch (loggingError) {\n        reportLogBoxError(loggingError);\n      }\n    });\n  }\n\n  function symbolicateLogNow(log) {\n    log.symbolicate(function () {\n      handleUpdate();\n    });\n  }\n\n  function retrySymbolicateLogNow(log) {\n    log.retrySymbolicate(function () {\n      handleUpdate();\n    });\n  }\n\n  function symbolicateLogLazy(log) {\n    log.symbolicate();\n  }\n\n  function clear() {\n    if (logs.size > 0) {\n      logs = new Set();\n      setSelectedLog(-1);\n    }\n  }\n\n  function setSelectedLog(proposedNewIndex) {\n    var oldIndex = _selectedIndex;\n    var newIndex = proposedNewIndex;\n    var logArray = Array.from(logs);\n    var index = logArray.length - 1;\n\n    while (index >= 0) {\n      if (logArray[index].level === 'syntax') {\n        newIndex = index;\n        break;\n      }\n\n      index -= 1;\n    }\n\n    _selectedIndex = newIndex;\n    handleUpdate();\n\n    if (_NativeLogBox.default) {\n      setTimeout(function () {\n        if (oldIndex < 0 && newIndex >= 0) {\n          _NativeLogBox.default.show();\n        } else if (oldIndex >= 0 && newIndex < 0) {\n          _NativeLogBox.default.hide();\n        }\n      }, 0);\n    }\n  }\n\n  function clearWarnings() {\n    var newLogs = Array.from(logs).filter(function (log) {\n      return log.level !== 'warn';\n    });\n\n    if (newLogs.length !== logs.size) {\n      logs = new Set(newLogs);\n      setSelectedLog(-1);\n      handleUpdate();\n    }\n  }\n\n  function clearErrors() {\n    var newLogs = Array.from(logs).filter(function (log) {\n      return log.level !== 'error' && log.level !== 'fatal';\n    });\n\n    if (newLogs.length !== logs.size) {\n      logs = new Set(newLogs);\n      setSelectedLog(-1);\n    }\n  }\n\n  function dismiss(log) {\n    if (logs.has(log)) {\n      logs.delete(log);\n      handleUpdate();\n    }\n  }\n\n  function setWarningFilter(filter) {\n    warningFilter = filter;\n  }\n\n  function setAppInfo(info) {\n    appInfo = info;\n  }\n\n  function getAppInfo() {\n    return appInfo != null ? appInfo() : null;\n  }\n\n  function checkWarningFilter(format) {\n    return warningFilter(format);\n  }\n\n  function addIgnorePatterns(patterns) {\n    var newPatterns = patterns.filter(function (pattern) {\n      if (pattern instanceof RegExp) {\n        for (var _iterator2 = _createForOfIteratorHelperLoose(ignorePatterns.entries()), _step2; !(_step2 = _iterator2()).done;) {\n          var existingPattern = _step2.value;\n\n          if (existingPattern instanceof RegExp && existingPattern.toString() === pattern.toString()) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n\n      return !ignorePatterns.has(pattern);\n    });\n\n    if (newPatterns.length === 0) {\n      return;\n    }\n\n    for (var _iterator3 = _createForOfIteratorHelperLoose(newPatterns), _step3; !(_step3 = _iterator3()).done;) {\n      var pattern = _step3.value;\n      ignorePatterns.add(pattern);\n      logs = new Set(Array.from(logs).filter(function (log) {\n        return !isMessageIgnored(log.message.content);\n      }));\n    }\n\n    handleUpdate();\n  }\n\n  function setDisabled(value) {\n    if (value === _isDisabled) {\n      return;\n    }\n\n    _isDisabled = value;\n    handleUpdate();\n  }\n\n  function isDisabled() {\n    return _isDisabled;\n  }\n\n  function observe(observer) {\n    var subscription = {\n      observer: observer\n    };\n    observers.add(subscription);\n    observer(getNextState());\n    return {\n      unsubscribe: function unsubscribe() {\n        observers.delete(subscription);\n      }\n    };\n  }\n\n  function withSubscription(WrappedComponent) {\n    var LogBoxStateSubscription = function (_React$Component) {\n      (0, _inherits2.default)(LogBoxStateSubscription, _React$Component);\n\n      var _super = _createSuper(LogBoxStateSubscription);\n\n      function LogBoxStateSubscription() {\n        var _this;\n\n        (0, _classCallCheck2.default)(this, LogBoxStateSubscription);\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this = _super.call.apply(_super, [this].concat(args));\n        _this.state = {\n          logs: new Set(),\n          isDisabled: false,\n          hasError: false,\n          selectedLogIndex: -1\n        };\n\n        _this._handleDismiss = function () {\n          var _this$state = _this.state,\n              selectedLogIndex = _this$state.selectedLogIndex,\n              stateLogs = _this$state.logs;\n          var logsArray = Array.from(stateLogs);\n\n          if (selectedLogIndex != null) {\n            if (logsArray.length - 1 <= 0) {\n              setSelectedLog(-1);\n            } else if (selectedLogIndex >= logsArray.length - 1) {\n              setSelectedLog(selectedLogIndex - 1);\n            }\n\n            dismiss(logsArray[selectedLogIndex]);\n          }\n        };\n\n        _this._handleMinimize = function () {\n          setSelectedLog(-1);\n        };\n\n        _this._handleSetSelectedLog = function (index) {\n          setSelectedLog(index);\n        };\n\n        return _this;\n      }\n\n      (0, _createClass2.default)(LogBoxStateSubscription, [{\n        key: \"componentDidCatch\",\n        value: function componentDidCatch(err, errorInfo) {\n          reportLogBoxError(err, errorInfo.componentStack);\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          if (this.state.hasError) {\n            return null;\n          }\n\n          return React.createElement(WrappedComponent, {\n            logs: Array.from(this.state.logs),\n            isDisabled: this.state.isDisabled,\n            selectedLogIndex: this.state.selectedLogIndex,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 9\n            }\n          });\n        }\n      }, {\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var _this2 = this;\n\n          this._subscription = observe(function (data) {\n            _this2.setState(data);\n          });\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          if (this._subscription != null) {\n            this._subscription.unsubscribe();\n          }\n        }\n      }], [{\n        key: \"getDerivedStateFromError\",\n        value: function getDerivedStateFromError() {\n          return {\n            hasError: true\n          };\n        }\n      }]);\n      return LogBoxStateSubscription;\n    }(React.Component);\n\n    return LogBoxStateSubscription;\n  }\n});","lineCount":479,"map":[[42,0,13,0],[44,0,14,0],[46,0,15,0],[48,0,23,0],[50,0,25,0],[64,0,11,1],[64,14,11,0],[66,0,66,0],[66,6,66,6,"observers"],[66,15,66,47],[66,18,66,50],[66,22,66,54,"Set"],[66,25,66,50],[66,27,66,0],[67,0,67,0],[67,6,67,6,"ignorePatterns"],[67,20,67,40],[67,23,67,43],[67,27,67,47,"Set"],[67,30,67,43],[67,32,67,0],[68,0,68,0],[68,6,68,4,"appInfo"],[68,13,68,27],[68,16,68,30],[68,20,68,0],[69,0,69,0],[69,6,69,4,"logs"],[69,10,69,20],[69,13,69,23],[69,17,69,27,"Set"],[69,20,69,23],[69,22,69,0],[70,0,70,0],[70,6,70,4,"updateTimeout"],[70,19,70,17],[70,22,70,20],[70,26,70,0],[71,0,71,0],[71,6,71,4,"_isDisabled"],[71,17,71,15],[71,20,71,18],[71,25,71,0],[73,0,72,0],[73,6,72,4,"_selectedIndex"],[73,20,72,18],[73,23,72,21],[73,24,72,22],[73,25,72,0],[75,0,74,0],[75,6,74,4,"warningFilter"],[75,19,74,32],[75,22,74,35],[75,45,74,44,"format"],[75,51,74,35],[75,53,74,52],[76,0,75,2],[76,11,75,9],[77,0,76,4,"finalFormat"],[77,6,76,4,"finalFormat"],[77,17,76,15],[77,19,76,17,"format"],[77,25,75,9],[78,0,77,4,"forceDialogImmediately"],[78,6,77,4,"forceDialogImmediately"],[78,28,77,26],[78,30,77,28],[78,35,75,9],[79,0,78,4,"suppressDialog_LEGACY"],[79,6,78,4,"suppressDialog_LEGACY"],[79,27,78,25],[79,29,78,27],[79,33,75,9],[80,0,79,4,"suppressCompletely"],[80,6,79,4,"suppressCompletely"],[80,24,79,22],[80,26,79,24],[80,31,75,9],[81,0,80,4,"monitorEvent"],[81,6,80,4,"monitorEvent"],[81,18,80,16],[81,20,80,18],[81,29,75,9],[82,0,81,4,"monitorListVersion"],[82,6,81,4,"monitorListVersion"],[82,24,81,22],[82,26,81,24],[82,27,75,9],[83,0,82,4,"monitorSampleRate"],[83,6,82,4,"monitorSampleRate"],[83,23,82,21],[83,25,82,23],[84,0,75,9],[84,5,75,2],[85,0,84,1],[85,3,74,0],[87,0,86,0],[87,6,86,6,"LOGBOX_ERROR_MESSAGE"],[87,26,86,26],[87,29,87,2],[87,101,86,0],[89,0,89,0],[89,11,89,9,"getNextState"],[89,23,89,0],[89,26,89,24],[90,0,90,2],[90,11,90,9],[91,0,91,4,"logs"],[91,6,91,4,"logs"],[91,10,91,8],[91,12,91,4,"logs"],[91,16,90,9],[92,0,92,4,"isDisabled"],[92,6,92,4,"isDisabled"],[92,16,92,14],[92,18,92,16,"_isDisabled"],[92,29,90,9],[93,0,93,4,"selectedLogIndex"],[93,6,93,4,"selectedLogIndex"],[93,22,93,20],[93,24,93,22,"_selectedIndex"],[94,0,90,9],[94,5,90,2],[95,0,95,1],[97,0,97,7],[97,11,97,16,"reportLogBoxError"],[97,28,97,7],[97,29,98,2,"error"],[97,34,97,7],[97,36,99,2,"componentStack"],[97,50,97,7],[97,52,100,8],[98,0,101,2],[98,8,101,8,"ExceptionsManager"],[98,25,101,25],[98,28,101,28,"require"],[98,39,101,35],[98,91,101,2],[100,0,103,2,"error"],[100,4,103,2,"error"],[100,9,103,7],[100,10,103,8,"forceRedbox"],[100,21,103,2],[100,24,103,22],[100,28,103,2],[101,0,104,2,"error"],[101,4,104,2,"error"],[101,9,104,7],[101,10,104,8,"message"],[101,17,104,2],[101,20,104,21,"LOGBOX_ERROR_MESSAGE"],[101,40,104,2],[101,52,104,48,"error"],[101,57,104,53],[101,58,104,54,"message"],[101,65,104,2],[103,0,105,2],[103,8,105,6,"componentStack"],[103,22,105,20],[103,26,105,24],[103,30,105,2],[103,32,105,30],[104,0,106,4,"error"],[104,6,106,4,"error"],[104,11,106,9],[104,12,106,10,"componentStack"],[104,26,106,4],[104,29,106,27,"componentStack"],[104,43,106,4],[105,0,107,3],[107,0,108,2,"ExceptionsManager"],[107,4,108,2,"ExceptionsManager"],[107,21,108,19],[107,22,108,20,"handleException"],[107,37,108,2],[107,38,108,36,"error"],[107,43,108,2],[107,45,108,57],[107,49,108,2],[108,0,109,1],[110,0,111,7],[110,11,111,16,"isLogBoxErrorMessage"],[110,31,111,7],[110,32,111,37,"message"],[110,39,111,7],[110,41,111,63],[111,0,112,2],[111,11,112,9],[111,18,112,16,"message"],[111,25,112,9],[111,30,112,28],[111,38,112,9],[111,42,112,40,"message"],[111,49,112,47],[111,50,112,48,"includes"],[111,58,112,40],[111,59,112,57,"LOGBOX_ERROR_MESSAGE"],[111,79,112,40],[111,80,112,2],[112,0,113,1],[114,0,115,7],[114,11,115,16,"isMessageIgnored"],[114,27,115,7],[114,28,115,33,"message"],[114,35,115,7],[114,37,115,59],[115,0,116,2],[115,57,116,24,"ignorePatterns"],[115,71,116,2],[115,111,116,40],[116,0,116,40],[116,10,116,13,"pattern"],[116,17,116,40],[118,0,117,4],[118,10,118,7,"pattern"],[118,17,118,14],[118,29,118,26,"RegExp"],[118,35,118,7],[118,39,118,36,"pattern"],[118,46,118,43],[118,47,118,44,"test"],[118,51,118,36],[118,52,118,49,"message"],[118,59,118,36],[118,60,118,6],[118,64,119,7],[118,71,119,14,"pattern"],[118,78,119,7],[118,83,119,26],[118,91,119,7],[118,95,119,38,"message"],[118,102,119,45],[118,103,119,46,"includes"],[118,111,119,38],[118,112,119,55,"pattern"],[118,119,119,38],[118,120,117,4],[118,122,120,6],[119,0,121,6],[119,15,121,13],[119,19,121,6],[120,0,122,5],[121,0,123,3],[123,0,124,2],[123,11,124,9],[123,16,124,2],[124,0,125,1],[126,0,127,0],[126,11,127,9,"handleUpdate"],[126,23,127,0],[126,26,127,30],[127,0,128,2],[127,8,128,6,"updateTimeout"],[127,21,128,19],[127,25,128,23],[127,29,128,2],[127,31,128,29],[128,0,129,4,"updateTimeout"],[128,6,129,4,"updateTimeout"],[128,19,129,17],[128,22,129,20,"setImmediate"],[128,34,129,32],[128,35,129,33],[128,47,129,39],[129,0,130,6,"updateTimeout"],[129,8,130,6,"updateTimeout"],[129,21,130,19],[129,24,130,22],[129,28,130,6],[130,0,131,6],[130,12,131,12,"nextState"],[130,21,131,21],[130,24,131,24,"getNextState"],[130,36,131,36],[130,38,131,6],[131,0,132,6,"observers"],[131,8,132,6,"observers"],[131,17,132,15],[131,18,132,16,"forEach"],[131,25,132,6],[131,26,132,24],[132,0,132,24],[132,14,132,26,"observer"],[132,22,132,24],[132,30,132,26,"observer"],[132,38,132,24],[133,0,132,24],[133,17,132,40,"observer"],[133,25,132,48],[133,26,132,49,"nextState"],[133,35,132,48],[133,36,132,24],[134,0,132,24],[134,9,132,6],[135,0,133,5],[135,7,129,32],[135,8,129,4],[136,0,134,3],[137,0,135,1],[139,0,137,0],[139,11,137,9,"appendNewLog"],[139,23,137,0],[139,24,137,22,"newLog"],[139,30,137,0],[139,32,137,30],[140,0,142,2],[140,8,142,6,"isMessageIgnored"],[140,24,142,22],[140,25,142,23,"newLog"],[140,31,142,29],[140,32,142,30,"message"],[140,39,142,23],[140,40,142,38,"content"],[140,47,142,22],[140,48,142,2],[140,50,142,48],[141,0,143,4],[142,0,144,3],[144,0,149,2],[144,8,149,8,"lastLog"],[144,15,149,15],[144,18,149,18,"Array"],[144,23,149,23],[144,24,149,24,"from"],[144,28,149,18],[144,29,149,29,"logs"],[144,33,149,18],[144,35,149,35,"pop"],[144,38,149,18],[144,40,149,2],[146,0,150,2],[146,8,150,6,"lastLog"],[146,15,150,13],[146,19,150,17,"lastLog"],[146,26,150,24],[146,27,150,25,"category"],[146,35,150,17],[146,40,150,38,"newLog"],[146,46,150,44],[146,47,150,45,"category"],[146,55,150,2],[146,57,150,55],[147,0,151,4,"lastLog"],[147,6,151,4,"lastLog"],[147,13,151,11],[147,14,151,12,"incrementCount"],[147,28,151,4],[148,0,152,4,"handleUpdate"],[148,6,152,4,"handleUpdate"],[148,18,152,16],[149,0,153,4],[150,0,154,3],[152,0,156,2],[152,8,156,6,"newLog"],[152,14,156,12],[152,15,156,13,"level"],[152,20,156,6],[152,25,156,23],[152,32,156,2],[152,34,156,32],[153,0,160,4],[153,10,160,10,"OPTIMISTIC_WAIT_TIME"],[153,30,160,30],[153,33,160,33],[153,37,160,4],[155,0,162,4],[155,10,162,8,"addPendingLog"],[155,24,162,21],[155,27,162,24],[155,52,162,30],[156,0,163,6,"logs"],[156,8,163,6,"logs"],[156,12,163,10],[156,13,163,11,"add"],[156,16,163,6],[156,17,163,15,"newLog"],[156,23,163,6],[158,0,164,6],[158,12,164,10,"_selectedIndex"],[158,26,164,24],[158,30,164,28],[158,31,164,6],[158,33,164,31],[159,0,165,8,"setSelectedLog"],[159,10,165,8,"setSelectedLog"],[159,24,165,22],[159,25,165,23,"logs"],[159,29,165,27],[159,30,165,28,"size"],[159,34,165,23],[159,37,165,35],[159,38,165,22],[159,39,165,8],[160,0,166,7],[160,9,164,6],[160,15,166,13],[161,0,167,8,"handleUpdate"],[161,10,167,8,"handleUpdate"],[161,22,167,20],[162,0,168,7],[164,0,169,6,"addPendingLog"],[164,8,169,6,"addPendingLog"],[164,22,169,19],[164,25,169,22],[164,29,169,6],[165,0,170,5],[165,7,162,4],[167,0,172,4],[167,10,172,10,"optimisticTimeout"],[167,27,172,27],[167,30,172,30,"setTimeout"],[167,40,172,40],[167,41,172,41],[167,53,172,47],[168,0,173,6],[168,12,173,10,"addPendingLog"],[168,26,173,6],[168,28,173,25],[169,0,174,8,"addPendingLog"],[169,10,174,8,"addPendingLog"],[169,24,174,21],[170,0,175,7],[171,0,176,5],[171,7,172,40],[171,9,176,7,"OPTIMISTIC_WAIT_TIME"],[171,29,172,40],[171,30,172,4],[172,0,178,4,"newLog"],[172,6,178,4,"newLog"],[172,12,178,10],[172,13,178,11,"symbolicate"],[172,24,178,4],[172,25,178,23],[172,35,178,23,"status"],[172,41,178,29],[172,43,178,33],[173,0,179,6],[173,12,179,10,"addPendingLog"],[173,26,179,23],[173,30,179,27,"status"],[173,36,179,33],[173,41,179,38],[173,50,179,6],[173,52,179,49],[174,0,180,8,"addPendingLog"],[174,10,180,8,"addPendingLog"],[174,24,180,21],[176,0,181,8,"clearTimeout"],[176,10,181,8,"clearTimeout"],[176,22,181,20],[176,23,181,21,"optimisticTimeout"],[176,40,181,20],[176,41,181,8],[177,0,182,7],[177,9,179,6],[177,15,182,13],[177,19,182,17,"status"],[177,25,182,23],[177,30,182,28],[177,39,182,13],[177,41,182,39],[178,0,184,8,"handleUpdate"],[178,10,184,8,"handleUpdate"],[178,22,184,20],[179,0,185,7],[180,0,186,5],[180,7,178,4],[181,0,187,3],[181,5,156,2],[181,11,187,9],[181,15,187,13,"newLog"],[181,21,187,19],[181,22,187,20,"level"],[181,27,187,13],[181,32,187,30],[181,40,187,9],[181,42,187,40],[182,0,188,4,"logs"],[182,6,188,4,"logs"],[182,10,188,8],[182,11,188,9,"add"],[182,14,188,4],[182,15,188,13,"newLog"],[182,21,188,4],[183,0,189,4,"setSelectedLog"],[183,6,189,4,"setSelectedLog"],[183,20,189,18],[183,21,189,19,"logs"],[183,25,189,23],[183,26,189,24,"size"],[183,30,189,19],[183,33,189,31],[183,34,189,18],[183,35,189,4],[184,0,190,3],[184,5,187,9],[184,11,190,9],[185,0,191,4,"logs"],[185,6,191,4,"logs"],[185,10,191,8],[185,11,191,9,"add"],[185,14,191,4],[185,15,191,13,"newLog"],[185,21,191,4],[186,0,192,4,"handleUpdate"],[186,6,192,4,"handleUpdate"],[186,18,192,16],[187,0,193,3],[188,0,194,1],[190,0,196,7],[190,11,196,16,"addLog"],[190,17,196,7],[190,18,196,23,"log"],[190,21,196,7],[190,23,196,43],[191,0,197,2],[191,8,197,8,"errorForStackTrace"],[191,26,197,26],[191,29,197,29],[191,33,197,33,"Error"],[191,38,197,29],[191,40,197,2],[192,0,201,2,"setImmediate"],[192,4,201,2,"setImmediate"],[192,16,201,14],[192,17,201,15],[192,29,201,21],[193,0,202,4],[193,10,202,8],[194,0,204,6],[194,12,204,12,"stack"],[194,17,204,17],[194,20,204,20],[194,50,204,36,"errorForStackTrace"],[194,68,204,20],[194,69,204,6],[195,0,206,6,"appendNewLog"],[195,8,206,6,"appendNewLog"],[195,20,206,18],[195,21,207,8],[195,25,207,12,"LogBoxLog"],[195,43,207,8],[195,44,207,22],[196,0,208,10,"level"],[196,10,208,10,"level"],[196,15,208,15],[196,17,208,17,"log"],[196,20,208,20],[196,21,208,21,"level"],[196,26,207,22],[197,0,209,10,"message"],[197,10,209,10,"message"],[197,17,209,17],[197,19,209,19,"log"],[197,22,209,22],[197,23,209,23,"message"],[197,30,207,22],[198,0,210,10,"isComponentError"],[198,10,210,10,"isComponentError"],[198,26,210,26],[198,28,210,28],[198,33,207,22],[199,0,211,10,"stack"],[199,10,211,10,"stack"],[199,15,211,15],[199,17,211,10,"stack"],[199,22,207,22],[200,0,212,10,"category"],[200,10,212,10,"category"],[200,18,212,18],[200,20,212,20,"log"],[200,23,212,23],[200,24,212,24,"category"],[200,32,207,22],[201,0,213,10,"componentStack"],[201,10,213,10,"componentStack"],[201,24,213,24],[201,26,213,26,"log"],[201,29,213,29],[201,30,213,30,"componentStack"],[202,0,207,22],[202,9,207,8],[202,10,206,18],[202,11,206,6],[203,0,216,5],[203,7,202,4],[203,8,216,6],[203,15,216,13,"error"],[203,20,216,6],[203,22,216,20],[204,0,217,6,"reportLogBoxError"],[204,8,217,6,"reportLogBoxError"],[204,25,217,23],[204,26,217,24,"error"],[204,31,217,23],[204,32,217,6],[205,0,218,5],[206,0,219,3],[206,5,201,14],[206,6,201,2],[207,0,220,1],[209,0,222,7],[209,11,222,16,"addException"],[209,23,222,7],[209,24,222,29,"error"],[209,29,222,7],[209,31,222,65],[210,0,225,2,"setImmediate"],[210,4,225,2,"setImmediate"],[210,16,225,14],[210,17,225,15],[210,29,225,21],[211,0,226,4],[211,10,226,8],[212,0,227,6,"appendNewLog"],[212,8,227,6,"appendNewLog"],[212,20,227,18],[212,21,227,19],[212,25,227,23,"LogBoxLog"],[212,43,227,19],[212,44,227,33],[212,86,227,54,"error"],[212,91,227,33],[212,92,227,19],[212,93,227,18],[212,94,227,6],[213,0,228,5],[213,7,226,4],[213,8,228,6],[213,15,228,13,"loggingError"],[213,27,228,6],[213,29,228,27],[214,0,229,6,"reportLogBoxError"],[214,8,229,6,"reportLogBoxError"],[214,25,229,23],[214,26,229,24,"loggingError"],[214,38,229,23],[214,39,229,6],[215,0,230,5],[216,0,231,3],[216,5,225,14],[216,6,225,2],[217,0,232,1],[219,0,234,7],[219,11,234,16,"symbolicateLogNow"],[219,28,234,7],[219,29,234,34,"log"],[219,32,234,7],[219,34,234,50],[220,0,235,2,"log"],[220,4,235,2,"log"],[220,7,235,5],[220,8,235,6,"symbolicate"],[220,19,235,2],[220,20,235,18],[220,32,235,24],[221,0,236,4,"handleUpdate"],[221,6,236,4,"handleUpdate"],[221,18,236,16],[222,0,237,3],[222,5,235,2],[223,0,238,1],[225,0,240,7],[225,11,240,16,"retrySymbolicateLogNow"],[225,33,240,7],[225,34,240,39,"log"],[225,37,240,7],[225,39,240,55],[226,0,241,2,"log"],[226,4,241,2,"log"],[226,7,241,5],[226,8,241,6,"retrySymbolicate"],[226,24,241,2],[226,25,241,23],[226,37,241,29],[227,0,242,4,"handleUpdate"],[227,6,242,4,"handleUpdate"],[227,18,242,16],[228,0,243,3],[228,5,241,2],[229,0,244,1],[231,0,246,7],[231,11,246,16,"symbolicateLogLazy"],[231,29,246,7],[231,30,246,35,"log"],[231,33,246,7],[231,35,246,51],[232,0,247,2,"log"],[232,4,247,2,"log"],[232,7,247,5],[232,8,247,6,"symbolicate"],[232,19,247,2],[233,0,248,1],[235,0,250,7],[235,11,250,16,"clear"],[235,16,250,7],[235,19,250,30],[236,0,251,2],[236,8,251,6,"logs"],[236,12,251,10],[236,13,251,11,"size"],[236,17,251,6],[236,20,251,18],[236,21,251,2],[236,23,251,21],[237,0,252,4,"logs"],[237,6,252,4,"logs"],[237,10,252,8],[237,13,252,11],[237,17,252,15,"Set"],[237,20,252,11],[237,22,252,4],[238,0,253,4,"setSelectedLog"],[238,6,253,4,"setSelectedLog"],[238,20,253,18],[238,21,253,19],[238,22,253,20],[238,23,253,18],[238,24,253,4],[239,0,254,3],[240,0,255,1],[242,0,257,7],[242,11,257,16,"setSelectedLog"],[242,25,257,7],[242,26,257,31,"proposedNewIndex"],[242,42,257,7],[242,44,257,63],[243,0,258,2],[243,8,258,8,"oldIndex"],[243,16,258,16],[243,19,258,19,"_selectedIndex"],[243,33,258,2],[244,0,259,2],[244,8,259,6,"newIndex"],[244,16,259,14],[244,19,259,17,"proposedNewIndex"],[244,35,259,2],[245,0,261,2],[245,8,261,8,"logArray"],[245,16,261,16],[245,19,261,19,"Array"],[245,24,261,24],[245,25,261,25,"from"],[245,29,261,19],[245,30,261,30,"logs"],[245,34,261,19],[245,35,261,2],[246,0,262,2],[246,8,262,6,"index"],[246,13,262,11],[246,16,262,14,"logArray"],[246,24,262,22],[246,25,262,23,"length"],[246,31,262,14],[246,34,262,32],[246,35,262,2],[248,0,263,2],[248,11,263,9,"index"],[248,16,263,14],[248,20,263,18],[248,21,263,2],[248,23,263,21],[249,0,265,4],[249,10,265,8,"logArray"],[249,18,265,16],[249,19,265,17,"index"],[249,24,265,16],[249,25,265,8],[249,26,265,24,"level"],[249,31,265,8],[249,36,265,34],[249,44,265,4],[249,46,265,44],[250,0,266,6,"newIndex"],[250,8,266,6,"newIndex"],[250,16,266,14],[250,19,266,17,"index"],[250,24,266,6],[251,0,267,6],[252,0,268,5],[254,0,269,4,"index"],[254,6,269,4,"index"],[254,11,269,9],[254,15,269,13],[254,16,269,4],[255,0,270,3],[257,0,271,2,"_selectedIndex"],[257,4,271,2,"_selectedIndex"],[257,18,271,16],[257,21,271,19,"newIndex"],[257,29,271,2],[258,0,272,2,"handleUpdate"],[258,4,272,2,"handleUpdate"],[258,16,272,14],[260,0,273,2],[260,8,273,6,"NativeLogBox"],[260,29,273,2],[260,31,273,20],[261,0,274,4,"setTimeout"],[261,6,274,4,"setTimeout"],[261,16,274,14],[261,17,274,15],[261,29,274,21],[262,0,275,6],[262,12,275,10,"oldIndex"],[262,20,275,18],[262,23,275,21],[262,24,275,10],[262,28,275,26,"newIndex"],[262,36,275,34],[262,40,275,38],[262,41,275,6],[262,43,275,41],[263,0,276,8,"NativeLogBox"],[263,32,276,21,"show"],[263,36,276,8],[264,0,277,7],[264,9,275,6],[264,15,277,13],[264,19,277,17,"oldIndex"],[264,27,277,25],[264,31,277,29],[264,32,277,17],[264,36,277,34,"newIndex"],[264,44,277,42],[264,47,277,45],[264,48,277,13],[264,50,277,48],[265,0,278,8,"NativeLogBox"],[265,32,278,21,"hide"],[265,36,278,8],[266,0,279,7],[267,0,280,5],[267,7,274,14],[267,9,280,7],[267,10,274,14],[267,11,274,4],[268,0,281,3],[269,0,282,1],[271,0,284,7],[271,11,284,16,"clearWarnings"],[271,24,284,7],[271,27,284,38],[272,0,285,2],[272,8,285,8,"newLogs"],[272,15,285,15],[272,18,285,18,"Array"],[272,23,285,23],[272,24,285,24,"from"],[272,28,285,18],[272,29,285,29,"logs"],[272,33,285,18],[272,35,285,35,"filter"],[272,41,285,18],[272,42,285,42],[272,52,285,42,"log"],[272,55,285,45],[273,0,285,45],[273,13,285,49,"log"],[273,16,285,52],[273,17,285,53,"level"],[273,22,285,49],[273,27,285,63],[273,33,285,45],[274,0,285,45],[274,5,285,18],[274,6,285,2],[276,0,286,2],[276,8,286,6,"newLogs"],[276,15,286,13],[276,16,286,14,"length"],[276,22,286,6],[276,27,286,25,"logs"],[276,31,286,29],[276,32,286,30,"size"],[276,36,286,2],[276,38,286,36],[277,0,287,4,"logs"],[277,6,287,4,"logs"],[277,10,287,8],[277,13,287,11],[277,17,287,15,"Set"],[277,20,287,11],[277,21,287,19,"newLogs"],[277,28,287,11],[277,29,287,4],[278,0,288,4,"setSelectedLog"],[278,6,288,4,"setSelectedLog"],[278,20,288,18],[278,21,288,19],[278,22,288,20],[278,23,288,18],[278,24,288,4],[279,0,289,4,"handleUpdate"],[279,6,289,4,"handleUpdate"],[279,18,289,16],[280,0,290,3],[281,0,291,1],[283,0,293,7],[283,11,293,16,"clearErrors"],[283,22,293,7],[283,25,293,36],[284,0,294,2],[284,8,294,8,"newLogs"],[284,15,294,15],[284,18,294,18,"Array"],[284,23,294,23],[284,24,294,24,"from"],[284,28,294,18],[284,29,294,29,"logs"],[284,33,294,18],[284,35,294,35,"filter"],[284,41,294,18],[284,42,295,4],[284,52,295,4,"log"],[284,55,295,7],[285,0,295,7],[285,13,295,11,"log"],[285,16,295,14],[285,17,295,15,"level"],[285,22,295,11],[285,27,295,25],[285,34,295,11],[285,38,295,36,"log"],[285,41,295,39],[285,42,295,40,"level"],[285,47,295,36],[285,52,295,50],[285,59,295,7],[286,0,295,7],[286,5,294,18],[286,6,294,2],[288,0,297,2],[288,8,297,6,"newLogs"],[288,15,297,13],[288,16,297,14,"length"],[288,22,297,6],[288,27,297,25,"logs"],[288,31,297,29],[288,32,297,30,"size"],[288,36,297,2],[288,38,297,36],[289,0,298,4,"logs"],[289,6,298,4,"logs"],[289,10,298,8],[289,13,298,11],[289,17,298,15,"Set"],[289,20,298,11],[289,21,298,19,"newLogs"],[289,28,298,11],[289,29,298,4],[290,0,299,4,"setSelectedLog"],[290,6,299,4,"setSelectedLog"],[290,20,299,18],[290,21,299,19],[290,22,299,20],[290,23,299,18],[290,24,299,4],[291,0,300,3],[292,0,301,1],[294,0,303,7],[294,11,303,16,"dismiss"],[294,18,303,7],[294,19,303,24,"log"],[294,22,303,7],[294,24,303,46],[295,0,304,2],[295,8,304,6,"logs"],[295,12,304,10],[295,13,304,11,"has"],[295,16,304,6],[295,17,304,15,"log"],[295,20,304,6],[295,21,304,2],[295,23,304,21],[296,0,305,4,"logs"],[296,6,305,4,"logs"],[296,10,305,8],[296,11,305,9,"delete"],[296,17,305,4],[296,18,305,16,"log"],[296,21,305,4],[297,0,306,4,"handleUpdate"],[297,6,306,4,"handleUpdate"],[297,18,306,16],[298,0,307,3],[299,0,308,1],[301,0,310,7],[301,11,310,16,"setWarningFilter"],[301,27,310,7],[301,28,310,33,"filter"],[301,34,310,7],[301,36,310,62],[302,0,311,2,"warningFilter"],[302,4,311,2,"warningFilter"],[302,17,311,15],[302,20,311,18,"filter"],[302,26,311,2],[303,0,312,1],[305,0,314,7],[305,11,314,16,"setAppInfo"],[305,21,314,7],[305,22,314,27,"info"],[305,26,314,7],[305,28,314,54],[306,0,315,2,"appInfo"],[306,4,315,2,"appInfo"],[306,11,315,9],[306,14,315,12,"info"],[306,18,315,2],[307,0,316,1],[309,0,318,7],[309,11,318,16,"getAppInfo"],[309,21,318,7],[309,24,318,39],[310,0,319,2],[310,11,319,9,"appInfo"],[310,18,319,16],[310,22,319,20],[310,26,319,9],[310,29,319,27,"appInfo"],[310,36,319,34],[310,38,319,9],[310,41,319,39],[310,45,319,2],[311,0,320,1],[313,0,322,7],[313,11,322,16,"checkWarningFilter"],[313,29,322,7],[313,30,322,35,"format"],[313,36,322,7],[313,38,322,64],[314,0,323,2],[314,11,323,9,"warningFilter"],[314,24,323,22],[314,25,323,23,"format"],[314,31,323,22],[314,32,323,2],[315,0,324,1],[317,0,326,7],[317,11,326,16,"addIgnorePatterns"],[317,28,326,7],[317,29,327,2,"patterns"],[317,37,326,7],[317,39,328,8],[318,0,331,2],[318,8,331,8,"newPatterns"],[318,19,331,19],[318,22,331,22,"patterns"],[318,30,331,30],[318,31,331,31,"filter"],[318,37,331,22],[318,38,331,38],[318,48,331,39,"pattern"],[318,55,331,38],[318,57,331,66],[319,0,332,4],[319,10,332,8,"pattern"],[319,17,332,15],[319,29,332,27,"RegExp"],[319,35,332,4],[319,37,332,35],[320,0,333,6],[320,62,333,36,"ignorePatterns"],[320,76,333,50],[320,77,333,51,"entries"],[320,84,333,36],[320,86,333,6],[320,129,333,62],[321,0,333,62],[321,14,333,17,"existingPattern"],[321,29,333,62],[323,0,334,8],[323,14,335,10,"existingPattern"],[323,29,335,25],[323,41,335,37,"RegExp"],[323,47,335,10],[323,51,336,10,"existingPattern"],[323,66,336,25],[323,67,336,26,"toString"],[323,75,336,10],[323,82,336,41,"pattern"],[323,89,336,48],[323,90,336,49,"toString"],[323,98,336,41],[323,100,334,8],[323,102,337,10],[324,0,338,10],[324,19,338,17],[324,24,338,10],[325,0,339,9],[326,0,340,7],[328,0,341,6],[328,15,341,13],[328,19,341,6],[329,0,342,5],[331,0,343,4],[331,13,343,11],[331,14,343,12,"ignorePatterns"],[331,28,343,26],[331,29,343,27,"has"],[331,32,343,12],[331,33,343,31,"pattern"],[331,40,343,12],[331,41,343,4],[332,0,344,3],[332,5,331,22],[332,6,331,2],[334,0,346,2],[334,8,346,6,"newPatterns"],[334,19,346,17],[334,20,346,18,"length"],[334,26,346,6],[334,31,346,29],[334,32,346,2],[334,34,346,32],[335,0,347,4],[336,0,348,3],[338,0,349,2],[338,58,349,24,"newPatterns"],[338,69,349,2],[338,112,349,37],[339,0,349,37],[339,10,349,13,"pattern"],[339,17,349,37],[340,0,350,4,"ignorePatterns"],[340,6,350,4,"ignorePatterns"],[340,20,350,18],[340,21,350,19,"add"],[340,24,350,4],[340,25,350,23,"pattern"],[340,32,350,4],[341,0,356,4,"logs"],[341,6,356,4,"logs"],[341,10,356,8],[341,13,356,11],[341,17,356,15,"Set"],[341,20,356,11],[341,21,357,6,"Array"],[341,26,357,11],[341,27,357,12,"from"],[341,31,357,6],[341,32,357,17,"logs"],[341,36,357,6],[341,38,357,23,"filter"],[341,44,357,6],[341,45,357,30],[341,55,357,30,"log"],[341,58,357,33],[342,0,357,33],[342,15,357,37],[342,16,357,38,"isMessageIgnored"],[342,32,357,54],[342,33,357,55,"log"],[342,36,357,58],[342,37,357,59,"message"],[342,44,357,55],[342,45,357,67,"content"],[342,52,357,54],[342,53,357,33],[343,0,357,33],[343,7,357,6],[343,8,356,11],[343,9,356,4],[344,0,359,3],[346,0,360,2,"handleUpdate"],[346,4,360,2,"handleUpdate"],[346,16,360,14],[347,0,361,1],[349,0,363,7],[349,11,363,16,"setDisabled"],[349,22,363,7],[349,23,363,28,"value"],[349,28,363,7],[349,30,363,50],[350,0,364,2],[350,8,364,6,"value"],[350,13,364,11],[350,18,364,16,"_isDisabled"],[350,29,364,2],[350,31,364,29],[351,0,365,4],[352,0,366,3],[354,0,367,2,"_isDisabled"],[354,4,367,2,"_isDisabled"],[354,15,367,13],[354,18,367,16,"value"],[354,23,367,2],[355,0,368,2,"handleUpdate"],[355,4,368,2,"handleUpdate"],[355,16,368,14],[356,0,369,1],[358,0,371,7],[358,11,371,16,"isDisabled"],[358,21,371,7],[358,24,371,38],[359,0,372,2],[359,11,372,9,"_isDisabled"],[359,22,372,2],[360,0,373,1],[362,0,375,7],[362,11,375,16,"observe"],[362,18,375,7],[362,19,375,24,"observer"],[362,27,375,7],[362,29,375,58],[363,0,376,2],[363,8,376,8,"subscription"],[363,20,376,20],[363,23,376,23],[364,0,376,24,"observer"],[364,6,376,24,"observer"],[364,14,376,32],[364,16,376,24,"observer"],[365,0,376,23],[365,5,376,2],[366,0,377,2,"observers"],[366,4,377,2,"observers"],[366,13,377,11],[366,14,377,12,"add"],[366,17,377,2],[366,18,377,16,"subscription"],[366,30,377,2],[367,0,379,2,"observer"],[367,4,379,2,"observer"],[367,12,379,10],[367,13,379,11,"getNextState"],[367,25,379,23],[367,27,379,10],[367,28,379,2],[368,0,381,2],[368,11,381,9],[369,0,382,4,"unsubscribe"],[369,6,382,4,"unsubscribe"],[369,17,381,9],[369,42,382,24],[370,0,383,6,"observers"],[370,8,383,6,"observers"],[370,17,383,15],[370,18,383,16,"delete"],[370,24,383,6],[370,25,383,23,"subscription"],[370,37,383,6],[371,0,384,5],[372,0,381,9],[372,5,381,2],[373,0,386,1],[375,0,404,7],[375,11,404,16,"withSubscription"],[375,27,404,7],[375,28,405,2,"WrappedComponent"],[375,44,404,7],[375,46,406,33],[376,0,406,33],[376,8,407,8,"LogBoxStateSubscription"],[376,31,406,33],[377,0,406,33],[379,0,406,33],[381,0,406,33],[382,0,406,33],[384,0,406,33],[386,0,406,33],[387,0,406,33],[388,0,406,33],[390,0,406,33],[391,0,406,33],[391,14,418,4,"state"],[391,19,406,33],[391,22,418,12],[392,0,419,6,"logs"],[392,10,419,6,"logs"],[392,14,419,10],[392,16,419,12],[392,20,419,16,"Set"],[392,23,419,12],[392,25,418,12],[393,0,420,6,"isDisabled"],[393,10,420,6,"isDisabled"],[393,20,420,16],[393,22,420,18],[393,27,418,12],[394,0,421,6,"hasError"],[394,10,421,6,"hasError"],[394,18,421,14],[394,20,421,16],[394,25,418,12],[395,0,422,6,"selectedLogIndex"],[395,10,422,6,"selectedLogIndex"],[395,26,422,22],[395,28,422,24],[395,29,422,25],[396,0,418,12],[396,9,406,33],[398,0,406,33],[398,14,453,4,"_handleDismiss"],[398,28,406,33],[398,31,453,21],[398,43,453,33],[399,0,453,33],[399,28,457,50],[399,34,457,55,"state"],[399,39,453,33],[400,0,453,33],[400,14,457,13,"selectedLogIndex"],[400,30,453,33],[400,45,457,13,"selectedLogIndex"],[400,61,453,33],[401,0,453,33],[401,14,457,37,"stateLogs"],[401,23,453,33],[401,38,457,31,"logs"],[401,42,453,33],[402,0,458,6],[402,14,458,12,"logsArray"],[402,23,458,21],[402,26,458,24,"Array"],[402,31,458,29],[402,32,458,30,"from"],[402,36,458,24],[402,37,458,35,"stateLogs"],[402,46,458,24],[402,47,458,6],[404,0,459,6],[404,14,459,10,"selectedLogIndex"],[404,30,459,26],[404,34,459,30],[404,38,459,6],[404,40,459,36],[405,0,460,8],[405,16,460,12,"logsArray"],[405,25,460,21],[405,26,460,22,"length"],[405,32,460,12],[405,35,460,31],[405,36,460,12],[405,40,460,36],[405,41,460,8],[405,43,460,39],[406,0,461,10,"setSelectedLog"],[406,14,461,10,"setSelectedLog"],[406,28,461,24],[406,29,461,25],[406,30,461,26],[406,31,461,24],[406,32,461,10],[407,0,462,9],[407,13,460,8],[407,19,462,15],[407,23,462,19,"selectedLogIndex"],[407,39,462,35],[407,43,462,39,"logsArray"],[407,52,462,48],[407,53,462,49,"length"],[407,59,462,39],[407,62,462,58],[407,63,462,15],[407,65,462,61],[408,0,463,10,"setSelectedLog"],[408,14,463,10,"setSelectedLog"],[408,28,463,24],[408,29,463,25,"selectedLogIndex"],[408,45,463,41],[408,48,463,44],[408,49,463,24],[408,50,463,10],[409,0,464,9],[411,0,466,8,"dismiss"],[411,12,466,8,"dismiss"],[411,19,466,15],[411,20,466,16,"logsArray"],[411,29,466,25],[411,30,466,26,"selectedLogIndex"],[411,46,466,25],[411,47,466,15],[411,48,466,8],[412,0,467,7],[413,0,468,5],[413,9,406,33],[415,0,406,33],[415,14,470,4,"_handleMinimize"],[415,29,406,33],[415,32,470,22],[415,44,470,34],[416,0,471,6,"setSelectedLog"],[416,10,471,6,"setSelectedLog"],[416,24,471,20],[416,25,471,21],[416,26,471,22],[416,27,471,20],[416,28,471,6],[417,0,472,5],[417,9,406,33],[419,0,406,33],[419,14,474,4,"_handleSetSelectedLog"],[419,35,406,33],[419,38,474,28],[419,48,474,29,"index"],[419,53,474,28],[419,55,474,53],[420,0,475,6,"setSelectedLog"],[420,10,475,6,"setSelectedLog"],[420,24,475,20],[420,25,475,21,"index"],[420,30,475,20],[420,31,475,6],[421,0,476,5],[421,9,406,33],[423,0,406,33],[424,0,406,33],[426,0,406,33],[427,0,406,33],[428,0,406,33],[428,42,412,22,"err"],[428,45,406,33],[428,47,412,34,"errorInfo"],[428,56,406,33],[428,58,412,76],[429,0,413,6,"reportLogBoxError"],[429,10,413,6,"reportLogBoxError"],[429,27,413,23],[429,28,413,24,"err"],[429,31,413,23],[429,33,413,29,"errorInfo"],[429,42,413,38],[429,43,413,39,"componentStack"],[429,57,413,23],[429,58,413,6],[430,0,414,5],[431,0,406,33],[432,0,406,33],[433,0,406,33],[433,33,425,25],[434,0,426,6],[434,14,426,10],[434,19,426,15,"state"],[434,24,426,10],[434,25,426,21,"hasError"],[434,33,426,6],[434,35,426,31],[435,0,429,8],[435,19,429,15],[435,23,429,8],[436,0,430,7],[438,0,432,6],[438,17,433,8],[438,37,433,9],[438,53,433,8],[439,0,434,10],[439,12,434,10],[439,16,434,14],[439,18,434,16,"Array"],[439,23,434,21],[439,24,434,22,"from"],[439,28,434,16],[439,29,434,27],[439,34,434,32,"state"],[439,39,434,27],[439,40,434,38,"logs"],[439,44,434,16],[439,45,433,8],[440,0,435,10],[440,12,435,10],[440,22,435,20],[440,24,435,22],[440,29,435,27,"state"],[440,34,435,22],[440,35,435,33,"isDisabled"],[440,45,433,8],[441,0,436,10],[441,12,436,10],[441,28,436,26],[441,30,436,28],[441,35,436,33,"state"],[441,40,436,28],[441,41,436,39,"selectedLogIndex"],[441,57,433,8],[442,0,433,8],[443,0,433,8],[444,0,433,8],[445,0,433,8],[446,0,433,8],[447,0,433,8],[448,0,433,8],[448,12,432,6],[449,0,439,5],[450,0,406,33],[451,0,406,33],[452,0,406,33],[452,44,441,30],[453,0,441,30],[455,0,442,6],[455,15,442,11,"_subscription"],[455,28,442,6],[455,31,442,27,"observe"],[455,38,442,34],[455,39,442,35],[455,49,442,35,"data"],[455,53,442,39],[455,55,442,43],[456,0,443,8],[456,12,443,8],[456,18,443,12],[456,19,443,13,"setState"],[456,27,443,8],[456,28,443,22,"data"],[456,32,443,8],[457,0,444,7],[457,11,442,34],[457,12,442,6],[458,0,445,5],[459,0,406,33],[460,0,406,33],[461,0,406,33],[461,47,447,33],[462,0,448,6],[462,14,448,10],[462,19,448,15,"_subscription"],[462,32,448,10],[462,36,448,32],[462,40,448,6],[462,42,448,38],[463,0,449,8],[463,17,449,13,"_subscription"],[463,30,449,8],[463,31,449,27,"unsubscribe"],[463,42,449,8],[464,0,450,7],[465,0,451,5],[466,0,406,33],[467,0,406,33],[468,0,406,33],[468,51,408,38],[469,0,409,6],[469,17,409,13],[470,0,409,14,"hasError"],[470,12,409,14,"hasError"],[470,20,409,22],[470,22,409,24],[471,0,409,13],[471,11,409,6],[472,0,410,5],[473,0,406,33],[474,0,406,33],[475,0,406,33],[475,6,407,40,"React"],[475,11,407,45],[475,12,407,46,"Component"],[475,21,406,33],[477,0,479,2],[477,11,479,9,"LogBoxStateSubscription"],[477,34,479,2],[478,0,480,1]],"functionMap":{"names":["<global>","warningFilter","getNextState","reportLogBoxError","isLogBoxErrorMessage","isMessageIgnored","handleUpdate","setImmediate$argument_0","observers.forEach$argument_0","appendNewLog","addPendingLog","setTimeout$argument_0","newLog.symbolicate$argument_0","addLog","addException","symbolicateLogNow","log.symbolicate$argument_0","retrySymbolicateLogNow","log.retrySymbolicate$argument_0","symbolicateLogLazy","clear","setSelectedLog","clearWarnings","Array.from.filter$argument_0","clearErrors","dismiss","setWarningFilter","setAppInfo","getAppInfo","checkWarningFilter","addIgnorePatterns","patterns.filter$argument_0","setDisabled","isDisabled","observe","unsubscribe","withSubscription","LogBoxStateSubscription","LogBoxStateSubscription.getDerivedStateFromError","LogBoxStateSubscription#componentDidCatch","LogBoxStateSubscription#render","LogBoxStateSubscription#componentDidMount","observe$argument_0","LogBoxStateSubscription#componentWillUnmount","LogBoxStateSubscription#_handleDismiss","LogBoxStateSubscription#_handleMinimize","LogBoxStateSubscription#_handleSetSelectedLog"],"mappings":"AAA;mCCyE;CDU;AEK;CFM;OGE;CHY;OIE;CJE;OKE;CLU;AME;iCCE;wBCG,mCD;KDC;CNE;ASE;wBCyB;KDQ;yCEE;KFI;uBGE;KHQ;CTQ;OaE;eNK;GMkB;CbC;OcE;ePG;GOM;CdC;OeE;kBCC;GDE;CfC;OiBE;uBCC;GDE;CjBC;OmBE;CnBE;OoBE;CpBK;OqBE;eViB;KUM;CrBE;OsBE;0CCC,2BD;CtBM;OwBE;IDE,qDC;CxBM;OyBE;CzBK;O0BE;C1BE;O2BE;C3BE;O4BE;C5BE;O6BE;C7BE;O8BE;sCCK;GDa;8BPa,6CO;C9BI;OgCE;ChCM;OiCE;CjCE;OkCE;ICO;KDE;ClCE;OoCkB;ECG;ICC;KDE;IEE;KFE;IGW;KHc;IIE;mCCC;ODE;KJC;IME;KNI;qBOE;KPe;sBQE;KRE;4BSE;KTE;GDC;CpCG"}},"type":"js/module"}]}