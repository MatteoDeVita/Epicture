{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"../TurboModule/TurboModuleRegistry","data":{"isAsync":false}},{"name":"../Utilities/Platform","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1], \"../TurboModule/TurboModuleRegistry\"));\n\n  var Platform = _$$_REQUIRE(_dependencyMap[2], \"../Utilities/Platform\");\n\n  var NativeModule = TurboModuleRegistry.getEnforcing('ExceptionsManager');\n  var ExceptionsManager = {\n    reportFatalException: function reportFatalException(message, stack, exceptionId) {\n      NativeModule.reportFatalException(message, stack, exceptionId);\n    },\n    reportSoftException: function reportSoftException(message, stack, exceptionId) {\n      NativeModule.reportSoftException(message, stack, exceptionId);\n    },\n    updateExceptionMessage: function updateExceptionMessage(message, stack, exceptionId) {\n      NativeModule.updateExceptionMessage(message, stack, exceptionId);\n    },\n    dismissRedbox: function dismissRedbox() {\n      if (\"android\" !== 'ios' && NativeModule.dismissRedbox) {\n        NativeModule.dismissRedbox();\n      }\n    },\n    reportException: function reportException(data) {\n      if (NativeModule.reportException) {\n        NativeModule.reportException(data);\n        return;\n      }\n\n      if (data.isFatal) {\n        ExceptionsManager.reportFatalException(data.message, data.stack, data.id);\n      } else {\n        ExceptionsManager.reportSoftException(data.message, data.stack, data.id);\n      }\n    }\n  };\n  var _default = ExceptionsManager;\n  exports.default = _default;\n});","lineCount":46,"map":[[2,0,11,0],[11,0,14,0],[13,0,61,0],[13,6,61,6,"Platform"],[13,14,61,14],[13,17,61,17,"require"],[13,28,61,24],[13,72,61,0],[15,0,63,0],[15,6,63,6,"NativeModule"],[15,18,63,18],[15,21,63,21,"TurboModuleRegistry"],[15,40,63,40],[15,41,63,41,"getEnforcing"],[15,53,63,21],[15,54,64,2],[15,73,63,21],[15,74,63,0],[16,0,67,0],[16,6,67,6,"ExceptionsManager"],[16,23,67,23],[16,26,67,26],[17,0,68,2,"reportFatalException"],[17,4,68,2,"reportFatalException"],[17,24,67,26],[17,56,69,4,"message"],[17,63,67,26],[17,65,70,4,"stack"],[17,70,67,26],[17,72,71,4,"exceptionId"],[17,83,67,26],[17,85,72,4],[18,0,73,4,"NativeModule"],[18,6,73,4,"NativeModule"],[18,18,73,16],[18,19,73,17,"reportFatalException"],[18,39,73,4],[18,40,73,38,"message"],[18,47,73,4],[18,49,73,47,"stack"],[18,54,73,4],[18,56,73,54,"exceptionId"],[18,67,73,4],[19,0,74,3],[19,5,67,26],[20,0,75,2,"reportSoftException"],[20,4,75,2,"reportSoftException"],[20,23,67,26],[20,54,76,4,"message"],[20,61,67,26],[20,63,77,4,"stack"],[20,68,67,26],[20,70,78,4,"exceptionId"],[20,81,67,26],[20,83,79,4],[21,0,80,4,"NativeModule"],[21,6,80,4,"NativeModule"],[21,18,80,16],[21,19,80,17,"reportSoftException"],[21,38,80,4],[21,39,80,37,"message"],[21,46,80,4],[21,48,80,46,"stack"],[21,53,80,4],[21,55,80,53,"exceptionId"],[21,66,80,4],[22,0,81,3],[22,5,67,26],[23,0,82,2,"updateExceptionMessage"],[23,4,82,2,"updateExceptionMessage"],[23,26,67,26],[23,60,83,4,"message"],[23,67,67,26],[23,69,84,4,"stack"],[23,74,67,26],[23,76,85,4,"exceptionId"],[23,87,67,26],[23,89,86,4],[24,0,87,4,"NativeModule"],[24,6,87,4,"NativeModule"],[24,18,87,16],[24,19,87,17,"updateExceptionMessage"],[24,41,87,4],[24,42,87,40,"message"],[24,49,87,4],[24,51,87,49,"stack"],[24,56,87,4],[24,58,87,56,"exceptionId"],[24,69,87,4],[25,0,88,3],[25,5,67,26],[26,0,89,2,"dismissRedbox"],[26,4,89,2,"dismissRedbox"],[26,17,67,26],[26,44,89,24],[27,0,90,4],[27,10,90,8],[27,24,90,24],[27,29,90,8],[27,33,90,33,"NativeModule"],[27,45,90,45],[27,46,90,46,"dismissRedbox"],[27,59,90,4],[27,61,90,61],[28,0,92,6,"NativeModule"],[28,8,92,6,"NativeModule"],[28,20,92,18],[28,21,92,19,"dismissRedbox"],[28,34,92,6],[29,0,93,5],[30,0,94,3],[30,5,67,26],[31,0,95,2,"reportException"],[31,4,95,2,"reportException"],[31,19,67,26],[31,46,95,18,"data"],[31,50,67,26],[31,52,95,45],[32,0,96,4],[32,10,96,8,"NativeModule"],[32,22,96,20],[32,23,96,21,"reportException"],[32,38,96,4],[32,40,96,38],[33,0,97,6,"NativeModule"],[33,8,97,6,"NativeModule"],[33,20,97,18],[33,21,97,19,"reportException"],[33,36,97,6],[33,37,97,35,"data"],[33,41,97,6],[34,0,98,6],[35,0,99,5],[37,0,100,4],[37,10,100,8,"data"],[37,14,100,12],[37,15,100,13,"isFatal"],[37,22,100,4],[37,24,100,22],[38,0,101,6,"ExceptionsManager"],[38,8,101,6,"ExceptionsManager"],[38,25,101,23],[38,26,101,24,"reportFatalException"],[38,46,101,6],[38,47,101,45,"data"],[38,51,101,49],[38,52,101,50,"message"],[38,59,101,6],[38,61,101,59,"data"],[38,65,101,63],[38,66,101,64,"stack"],[38,71,101,6],[38,73,101,71,"data"],[38,77,101,75],[38,78,101,76,"id"],[38,80,101,6],[39,0,102,5],[39,7,100,4],[39,13,102,11],[40,0,103,6,"ExceptionsManager"],[40,8,103,6,"ExceptionsManager"],[40,25,103,23],[40,26,103,24,"reportSoftException"],[40,45,103,6],[40,46,103,44,"data"],[40,50,103,48],[40,51,103,49,"message"],[40,58,103,6],[40,60,103,58,"data"],[40,64,103,62],[40,65,103,63,"stack"],[40,70,103,6],[40,72,103,70,"data"],[40,76,103,74],[40,77,103,75,"id"],[40,79,103,6],[41,0,104,5],[42,0,105,3],[43,0,67,26],[43,3,67,0],[44,17,108,15,"ExceptionsManager"],[44,34]],"functionMap":{"names":["<global>","ExceptionsManager.reportFatalException","ExceptionsManager.reportSoftException","ExceptionsManager.updateExceptionMessage","ExceptionsManager.dismissRedbox","ExceptionsManager.reportException"],"mappings":"AAA;ECmE;GDM;EEC;GFM;EGC;GHM;EIC;GJK;EKC;GLU"}},"type":"js/module"}]}