{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"anser","data":{"isAsync":false}},{"name":"../../Text/Text","data":{"isAsync":false}},{"name":"../../Components/View/View","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ansi;\n\n  var _anser = _$$_REQUIRE(_dependencyMap[2], \"anser\");\n\n  var _Text = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"../../Text/Text\"));\n\n  var _View = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"../../Components/View/View\"));\n\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[5], \"react\"));\n\n  var _jsxFileName = \"/home/lorris/WORK/B-DEV-501-LYN-5-1-epicture-matteo.de-vita/epicture/node_modules/react-native/Libraries/LogBox/UI/AnsiHighlight.js\";\n  var COLORS = {\n    'ansi-black': 'rgb(27, 27, 27)',\n    'ansi-red': 'rgb(187, 86, 83)',\n    'ansi-green': 'rgb(144, 157, 98)',\n    'ansi-yellow': 'rgb(234, 193, 121)',\n    'ansi-blue': 'rgb(125, 169, 199)',\n    'ansi-magenta': 'rgb(176, 101, 151)',\n    'ansi-cyan': 'rgb(140, 220, 216)',\n    'ansi-bright-black': 'rgb(98, 98, 98)',\n    'ansi-bright-red': 'rgb(187, 86, 83)',\n    'ansi-bright-green': 'rgb(144, 157, 98)',\n    'ansi-bright-yellow': 'rgb(234, 193, 121)',\n    'ansi-bright-blue': 'rgb(125, 169, 199)',\n    'ansi-bright-magenta': 'rgb(176, 101, 151)',\n    'ansi-bright-cyan': 'rgb(140, 220, 216)',\n    'ansi-bright-white': 'rgb(247, 247, 247)'\n  };\n\n  function Ansi(_ref) {\n    var _this = this;\n\n    var text = _ref.text,\n        style = _ref.style;\n    var commonWhitespaceLength = Infinity;\n    var parsedLines = text.split(/\\n/).map(function (line) {\n      return (0, _anser.ansiToJson)(line, {\n        json: true,\n        remove_empty: true,\n        use_classes: true\n      });\n    });\n    parsedLines.map(function (lines) {\n      var _lines$, _lines$$content, _match$;\n\n      var match = lines[2] && ((_lines$ = lines[2]) == null ? void 0 : (_lines$$content = _lines$.content) == null ? void 0 : _lines$$content.match(/^ +/));\n      var whitespaceLength = match && ((_match$ = match[0]) == null ? void 0 : _match$.length) || 0;\n\n      if (whitespaceLength < commonWhitespaceLength) {\n        commonWhitespaceLength = whitespaceLength;\n      }\n    });\n\n    var getText = function getText(content, key) {\n      if (key === 1) {\n        return content.replace(/\\| $/, ' ');\n      } else if (key === 2 && commonWhitespaceLength < Infinity) {\n        return content.substr(commonWhitespaceLength);\n      } else {\n        return content;\n      }\n    };\n\n    return React.createElement(_View.default, {\n      style: {\n        flexDirection: 'column'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }\n    }, parsedLines.map(function (items, i) {\n      return React.createElement(_View.default, {\n        style: {\n          flexDirection: 'row'\n        },\n        key: i,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }\n      }, items.map(function (bundle, key) {\n        var textStyle = bundle.fg && COLORS[bundle.fg] ? {\n          backgroundColor: bundle.bg && COLORS[bundle.bg],\n          color: bundle.fg && COLORS[bundle.fg]\n        } : {\n          backgroundColor: bundle.bg && COLORS[bundle.bg]\n        };\n        return React.createElement(_Text.default, {\n          style: [style, textStyle],\n          key: key,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }\n        }, getText(bundle.content, key));\n      }));\n    }));\n  }\n});","lineCount":114,"map":[[11,0,11,0],[13,0,12,0],[15,0,13,0],[17,0,14,0],[20,0,19,0],[20,6,19,6,"COLORS"],[20,12,19,12],[20,15,19,15],[21,0,20,2],[21,18,20,16],[21,35,19,15],[22,0,21,2],[22,16,21,14],[22,34,19,15],[23,0,22,2],[23,18,22,16],[23,37,19,15],[24,0,23,2],[24,19,23,17],[24,39,19,15],[25,0,24,2],[25,17,24,15],[25,37,19,15],[26,0,25,2],[26,20,25,18],[26,40,19,15],[27,0,26,2],[27,17,26,15],[27,37,19,15],[28,0,29,2],[28,25,29,23],[28,42,19,15],[29,0,30,2],[29,23,30,21],[29,41,19,15],[30,0,31,2],[30,25,31,23],[30,44,19,15],[31,0,32,2],[31,26,32,24],[31,46,19,15],[32,0,33,2],[32,24,33,22],[32,44,19,15],[33,0,34,2],[33,27,34,25],[33,47,19,15],[34,0,35,2],[34,24,35,22],[34,44,19,15],[35,0,36,2],[35,25,36,23],[36,0,19,15],[36,3,19,0],[38,0,39,15],[38,11,39,24,"Ansi"],[38,15,39,15],[38,22,46,15],[39,0,46,15],[41,0,46,15],[41,8,40,2,"text"],[41,12,46,15],[41,20,40,2,"text"],[41,24,46,15],[42,0,46,15],[42,8,41,2,"style"],[42,13,46,15],[42,21,41,2,"style"],[42,26,46,15],[43,0,47,2],[43,8,47,6,"commonWhitespaceLength"],[43,30,47,28],[43,33,47,31,"Infinity"],[43,41,47,2],[44,0,48,2],[44,8,48,8,"parsedLines"],[44,19,48,19],[44,22,48,22,"text"],[44,26,48,26],[44,27,48,27,"split"],[44,32,48,22],[44,33,48,33],[44,37,48,22],[44,39,48,39,"map"],[44,42,48,22],[44,43,48,43],[44,53,48,43,"line"],[44,57,48,47],[45,0,48,47],[45,13,49,4],[45,36,49,15,"line"],[45,40,49,4],[45,42,49,21],[46,0,50,6,"json"],[46,8,50,6,"json"],[46,12,50,10],[46,14,50,12],[46,18,49,21],[47,0,51,6,"remove_empty"],[47,8,51,6,"remove_empty"],[47,20,51,18],[47,22,51,20],[47,26,49,21],[48,0,52,6,"use_classes"],[48,8,52,6,"use_classes"],[48,19,52,17],[48,21,52,19],[49,0,49,21],[49,7,49,4],[49,8,48,47],[50,0,48,47],[50,5,48,22],[50,6,48,2],[51,0,56,2,"parsedLines"],[51,4,56,2,"parsedLines"],[51,15,56,13],[51,16,56,14,"map"],[51,19,56,2],[51,20,56,18],[51,30,56,18,"lines"],[51,35,56,23],[51,37,56,27],[52,0,56,27],[54,0,60,4],[54,10,60,10,"match"],[54,15,60,15],[54,18,60,18,"lines"],[54,23,60,23],[54,24,60,24],[54,25,60,23],[54,26,60,18],[54,42,60,30,"lines"],[54,47,60,35],[54,48,60,36],[54,49,60,35],[54,50,60,18],[54,90,60,30],[54,98,60,40,"content"],[54,105,60,18],[54,126,60,30],[54,142,60,49,"match"],[54,147,60,30],[54,148,60,55],[54,153,60,30],[54,154,60,18],[54,155,60,4],[55,0,61,4],[55,10,61,10,"whitespaceLength"],[55,26,61,26],[55,29,61,30,"match"],[55,34,61,35],[55,50,61,39,"match"],[55,55,61,44],[55,56,61,45],[55,57,61,44],[55,58,61,35],[55,79,61,39],[55,87,61,49,"length"],[55,93,61,35],[55,94,61,29],[55,98,61,60],[55,99,61,4],[57,0,62,4],[57,10,62,8,"whitespaceLength"],[57,26,62,24],[57,29,62,27,"commonWhitespaceLength"],[57,51,62,4],[57,53,62,51],[58,0,63,6,"commonWhitespaceLength"],[58,8,63,6,"commonWhitespaceLength"],[58,30,63,28],[58,33,63,31,"whitespaceLength"],[58,49,63,6],[59,0,64,5],[60,0,65,3],[60,5,56,2],[62,0,67,2],[62,8,67,8,"getText"],[62,15,67,15],[62,18,67,18],[62,27,67,8,"getText"],[62,34,67,18],[62,35,67,19,"content"],[62,42,67,18],[62,44,67,28,"key"],[62,47,67,18],[62,49,67,36],[63,0,68,4],[63,10,68,8,"key"],[63,13,68,11],[63,18,68,16],[63,19,68,4],[63,21,68,19],[64,0,70,6],[64,15,70,13,"content"],[64,22,70,20],[64,23,70,21,"replace"],[64,30,70,13],[64,31,70,29],[64,37,70,13],[64,39,70,37],[64,42,70,13],[64,43,70,6],[65,0,71,5],[65,7,68,4],[65,13,71,11],[65,17,71,15,"key"],[65,20,71,18],[65,25,71,23],[65,26,71,15],[65,30,71,28,"commonWhitespaceLength"],[65,52,71,50],[65,55,71,53,"Infinity"],[65,63,71,11],[65,65,71,63],[66,0,73,6],[66,15,73,13,"content"],[66,22,73,20],[66,23,73,21,"substr"],[66,29,73,13],[66,30,73,28,"commonWhitespaceLength"],[66,52,73,13],[66,53,73,6],[67,0,74,5],[67,7,71,11],[67,13,74,11],[68,0,75,6],[68,15,75,13,"content"],[68,22,75,6],[69,0,76,5],[70,0,77,3],[70,5,67,2],[72,0,79,2],[72,11,80,4],[72,31,80,5],[72,44,80,4],[73,0,80,10],[73,6,80,10],[73,11,80,15],[73,13,80,17],[74,0,80,18,"flexDirection"],[74,8,80,18,"flexDirection"],[74,21,80,31],[74,23,80,33],[75,0,80,17],[75,7,80,4],[76,0,80,4],[77,0,80,4],[78,0,80,4],[79,0,80,4],[80,0,80,4],[81,0,80,4],[82,0,80,4],[82,7,81,7,"parsedLines"],[82,18,81,18],[82,19,81,19,"map"],[82,22,81,7],[82,23,81,23],[82,33,81,24,"items"],[82,38,81,23],[82,40,81,31,"i"],[82,41,81,23],[83,0,81,23],[83,13,82,8],[83,33,82,9],[83,46,82,8],[84,0,82,14],[84,8,82,14],[84,13,82,19],[84,15,82,21],[85,0,82,22,"flexDirection"],[85,10,82,22,"flexDirection"],[85,23,82,35],[85,25,82,37],[86,0,82,21],[86,9,82,8],[87,0,82,45],[87,8,82,45],[87,11,82,48],[87,13,82,50,"i"],[87,14,82,8],[88,0,82,8],[89,0,82,8],[90,0,82,8],[91,0,82,8],[92,0,82,8],[93,0,82,8],[94,0,82,8],[94,9,83,11,"items"],[94,14,83,16],[94,15,83,17,"map"],[94,18,83,11],[94,19,83,21],[94,29,83,22,"bundle"],[94,35,83,21],[94,37,83,30,"key"],[94,40,83,21],[94,42,83,38],[95,0,84,12],[95,12,84,18,"textStyle"],[95,21,84,27],[95,24,85,14,"bundle"],[95,30,85,20],[95,31,85,21,"fg"],[95,33,85,14],[95,37,85,27,"COLORS"],[95,43,85,33],[95,44,85,34,"bundle"],[95,50,85,40],[95,51,85,41,"fg"],[95,53,85,33],[95,54,85,14],[95,57,86,18],[96,0,87,20,"backgroundColor"],[96,10,87,20,"backgroundColor"],[96,25,87,35],[96,27,87,37,"bundle"],[96,33,87,43],[96,34,87,44,"bg"],[96,36,87,37],[96,40,87,50,"COLORS"],[96,46,87,56],[96,47,87,57,"bundle"],[96,53,87,63],[96,54,87,64,"bg"],[96,56,87,56],[96,57,86,18],[97,0,88,20,"color"],[97,10,88,20,"color"],[97,15,88,25],[97,17,88,27,"bundle"],[97,23,88,33],[97,24,88,34,"fg"],[97,26,88,27],[97,30,88,40,"COLORS"],[97,36,88,46],[97,37,88,47,"bundle"],[97,43,88,53],[97,44,88,54,"fg"],[97,46,88,46],[98,0,86,18],[98,9,85,14],[98,12,90,18],[99,0,91,20,"backgroundColor"],[99,10,91,20,"backgroundColor"],[99,25,91,35],[99,27,91,37,"bundle"],[99,33,91,43],[99,34,91,44,"bg"],[99,36,91,37],[99,40,91,50,"COLORS"],[99,46,91,56],[99,47,91,57,"bundle"],[99,53,91,63],[99,54,91,64,"bg"],[99,56,91,56],[100,0,90,18],[100,9,84,12],[101,0,93,12],[101,15,94,14],[101,35,94,15],[101,48,94,14],[102,0,94,20],[102,10,94,20],[102,15,94,25],[102,17,94,27],[102,18,94,28,"style"],[102,23,94,27],[102,25,94,35,"textStyle"],[102,34,94,27],[102,35,94,14],[103,0,94,47],[103,10,94,47],[103,13,94,50],[103,15,94,52,"key"],[103,18,94,14],[104,0,94,14],[105,0,94,14],[106,0,94,14],[107,0,94,14],[108,0,94,14],[109,0,94,14],[110,0,94,14],[110,11,95,17,"getText"],[110,18,95,24],[110,19,95,25,"bundle"],[110,25,95,31],[110,26,95,32,"content"],[110,33,95,24],[110,35,95,41,"key"],[110,38,95,24],[110,39,94,14],[110,40,93,12],[111,0,98,11],[111,7,83,11],[111,8,82,8],[111,9,81,23],[112,0,81,23],[112,5,81,7],[112,6,80,4],[112,7,79,2],[113,0,103,1]],"functionMap":{"names":["<global>","Ansi","text.split.map$argument_0","parsedLines.map$argument_0","getText","items.map$argument_0"],"mappings":"AAA;eCsC;2CCS;MDK;kBEG;GFS;kBGE;GHU;uBEI;qBEE;WFe;OFE;CDG"}},"type":"js/module"}]}